---
title: "Manuscript Draft: Aim3 Leaf Traits"
date: today
bibliography: VBL_library.bib
csl: functional-ecology.csl
author:
  - name: Bolívar Aponte Rolón
    orcid: 0000-0002-2544-4551
    email: baponterolo@tulane.edu
    corresponding: true
    affiliation: 
      - id: tu
        name: Tulane University
        department: Ecology and Evolutionary Biology
        city: New Orleans
        state: LA
        country: US
        url: www.tulane.edu
  - name: Mareli Sánchez Juliá
    #orcid: 
    email: msanchezjulia@tulane.edu
    corresponding: false
    affiliation: 
      - id: tu
        name: Tulane University
        department: Ecology and Evolutionary Biology
        city: New Orleans
        state: LA
        country: US
        url: www.tulane.edu
  - name: A. Elizabeth Arnold
    orcid: 0000-0002-7013-4026
    email: arnold@ag.arizona.edu
    corresponding: false
    affiliation: 
      - id: ua
        name: University of Arizona
        department: School of Plant Sciences
        city: Tucson
        state: AZ
        country: US
        url: www.arizona.edu
      - id: ua2
        name: University of Arizona
        department: Department of Ecology and Evolutionary Biology
        city: Tucson
        state: AZ
        country: US
        url: www.arizona.edu  
  - name: Sunshine A. Van Bael
    orcid: 0000-0001-7317-3533
    email: svanbael@tulane.edu
    corresponding: false
    affiliation: 
      - ref: tu
format:
  pdf:
    documentclass: scrartcl
    include-in-header:
        text: '\usepackage{lineno}\linenumbers'
    linestretch: 2.0
    margin-left: 1in
    margin-right: 1in
    margin-top: 1in
    margin-bottom: 1in
    mainfont: TeX Gyre Termes #Alternative to Times New Roman
    sansfont: TeX Gyre Termes #Another option is Liberation Serif
    number-sections: true
    citation-package: biblatex
  docx:
    reference-doc: custom-reference-doc.docx
    number-sections: true
    #linestretch: 2.0
    citation-package: biblatex
editor: source
execute:
  echo: false
warning: false
---

```{r}
#| echo: false
#| eval: true
knitr::opts_chunk$set(ft.tabcolsep=0, ft.latex.float = "none")
```

# Abstract

# Keywords:

Atta colombica, Calonectria, foliar fungal endophytes, herbivory, pathogen, tropical trees, symbioses

# Introduction

***Hypothesis 2***
If FEF improves leaf defenses against plant pests, then generalist
herbivores and pathogens will remove or damage less leaf tissue from
plants with treated high FEF levels relative to those with low FEF
loads.

**Predictions.**

Leaf-cutter ants will remove less plant material from leaves with higher FEF
abundance and richness, but this result will be modulated by leaf
traits related to defenses. Leaves with longer lifespans will be less attractive to leaf-cutter ants. Alternatively, low FEF diversity in those leaves may outweigh this selection factor. Leaves treated with high FEF levels will have
a smaller area of pathogen damage compared to those treated with low
FEF levels. Endophyte-mediated defenses against pathogens will be
most important in short-lived leaves since long-lived leaves are
expected to rely more on constitutive defenses (e.g., leaf
toughness).

# Materials and Methods

## Field

Growth and host plant inoculation seven tropical tree species was conducted at the greenhouses in the Gamboa Research Station, Smithsonian Tropical Research institute, Republic of Panama. The species, *Theobroma cacao*, *Dypterix* sp., *Lacmellea panamensis*, *Apeiba membranacea*, *Heisteria concinna*, *Chrysophyllum caimito*, and *Cordia alliodora* were chosen due to their variance in leaf traits (J.Wright unpublished data) and the availability of seeds in January- April 2019. Seeds of tree species were collected from the forest floor and grown in the greenhouse. Seedlings were kept in a chamber made out of PVC and clear plastic to prevent inoculation from spore fall inside the greenhouse. NEEDS INFORMATION ON THE SOIL MIXTURE AND AUTOCLAVING PROTOCOL. Seedlings reached a minimum of 4 true leaves before endophyte inoculation. Then 10 individual plants of each species were exposed to 10 nights of spore fall to achieve a high endophyte load (E+) and 10 homologous plants were kept inside the greenhouse plastic chamber to maintain a low endophyte load (*E-*) (Fig. ? MAKE A DIRAGRAM?). Plants exposed to spore fall were placed near (\~10 m) the forest edge at dusk (\~18:OO hours) and returned to the greenhouse at dawn (\~07:00 hours) [@bittleston2011].

### Leaf trait measurements

Three mature leaves were haphazardly collected from each of the individual plants in each treatment (E+, E-) within 7-10 days after inoculation treatment. Anthocyanin (ACI) content and leaf thickness (LT) were measured while the leaf was still attached to the plant. We measured anthocyanin content with ACM-200plus (Opti-Sciences Inc. Hudson, New Hampshire, U.S.A.) on three haphazardly selected locations (working from the petiole out to the leaf tip) on the leaf surface of three haphazardly selected leaves for a total of nine measurements per plant [@tellezTraits2022]. To account for leaf thickness, the ACM-200 calculates an anthocyanin content index (ACI) value from the ratio of % transmittance at 931 nm/% transmittance at 525 nm [@tellezRedCol2016, @opti-sciencesinc.]. On compound leaves (i.e., *Dypterix* sp.) we measured at three different leaflets. Leaf thickness (μm) was measured with a Mitutoyo 7327 Micrometer Gauge (Mitutoyo, Takatsu-ku, Kawasaki, Japan) in sthe same manner as the anthocyanin measurements, taking care to avoid major and secondary veins. After anthocyanin and leaf thickness measurements were completed, we removed the leaves from their stems, placed them inside a plastic bag (i.e. ZiplocⓇ), place in an ice chest and moved them to the lab for further measurements. Leaf punch strength (LPS) was measured with an Imada DST-11a digital force gauge (Imada Inc., Northbrook, IL, United States) by conducting punch-and-die tests with a sharp-edged cylindrical steel punch (2.0 mm diameter) and a steel die with a sharp-edged aperture of small clearance (0.05 mm). The leaf punch measurements were taken by puncturing the leaf lamina at the base, mid-leaf and tip on both sides of the mid-vein, avoiding minor leaf veins when possible [@tellezTraits2022]. Once leaf toughness was measured, we used a 7 mm diameter punch hole to puncture disks for leaf mass per area (LMA) measurements. We collected one three disks per leaf (see Supplementary material for details). The disk punches dried at 60 °C for 48-72 hours. before being weighed.

### Leaf tissue preparation for molecular work

The selected leaves were also used to profile endophyte community composition, abundance, and richness via amplicon sequencing (Illumina MiSeq). The leaf tissue remaining after the leaf trait measurements had the main vein and margins excised so that only the lamina remained. The lamina was haphazardly cut into 2 x 2 mm segments, enough to obtain a total of 16, and surface sterilized by sequential rinsing in 95% ethanol (10 s), 0.5 NaOCl (2 mins) and 70% ethanol (2 mins), as per [@arnold2003; @higgins2014; @tellezTraits2022]. After, leaves were air-dried briefly under sterile conditions. Sixteen leaf segments per leaf, a total of forty-eight leaf segments per plant, were plated in 2% malt extract agar (MEA), sealed with Parafilm M (Bemis Company Inc., U.S.A.) and incubated at room temperature. The cultured leaf segments were used to estimate endophyte colonization of *E-* and *E+* leaves. The presence or absence of endophytic fungi in the leaf cuttings was assessed 7 days after plating. The remaining sterilized leaf lamina was preserved in sterile 15 mL tubes with \~ 10 mL CTAB solution (1 M Tris--HCl pH 8, 5 M NaCl, 0.5 M EDTA, and 20 g CTAB). Leaf tissue in CTAB solution was used for amplicon sequencing (described in detail below). All leaf tissue handling was performed in a biosafety cabinet with all surfaces sterilized by exposure to UV light for 30 minutes and cleaned sequentially in between samples with 95% ethanol, 0.5% NaOCl and 70% ethanol to prevent cross contamination.

## Amplicon sequencing

Leaf tissue in CTAB solution was stored for 2 months at room temperature prior to being placed at -80 C for 3 months before extracting DNA. In preparation for DNA extraction, we decontaminated all instruments, materials, and surfaces with DNAway (Molecular BioProducts Inc., San Diego, CA, United States), 95% Ethanol, 0.5 % NaOCl, and 70 % Ethanol, and subsequently treated with UV light for 30 minutes in biosafety cabinet. We then transferred 0.2 -- 0.3 g of leaf tissue into duplicate sterile 2mL tubes, resulting in 2 subsamples. Total genomic DNA from subsamples was extracted as described in U'Ren & Arnold [-@uren2017]. In brief, we added two sterile 3.2 mm stainless steel beads to each tube and proceeded to lyophilize samples for 72 hours to fully remove CTAB content from tissue. After this period, we submerged the sample tubes in liquid nitrogen for 30s and proceeded to homogenize samples to a fine powder for 45 s in FastPrep-24 Tissue and Cell Homogenizer (MP Biomedicals, Solon, OH, USA). Afterwards, we repeated the decontamination procedure described before and used QIAGEN DNeasy 96 PowerPlant Pro-HTP Kit [@uren2017] (QIAGEN, Valencia, CA, USA). After all genomic DNA was extracted, we pooled the subsamples for each individual sample before amplification. We used sterile equipment and pipettes with aerosol-resistant tips with filters in all steps before amplification. We followed a two-step amplification approach previously described by Sarmiento et al. [-@sarmiento2017] and U´Ren & Arnold [-@uren2017]. We used primers for the fungal ITSrDNA region, ITS1f (5'-CTTGGTCATTTAGAGGAAGTAA-3') and ITS4 (5'-TCCTCCGCTTATTGATATGC-3') with modified universal consensus sequences CS1 and CS2 and 0--5 bp for phase-shifting. Every sample was amplified in two parallel reactions containing 1-2 µL of DNA template [@uren2017; see also @tellezTraits2022]. We visualized PCR (PCR1) reactions with SYBR Green 1 (Invitrogen, Carlsbad, CA, USA) on 2% agarose gel [@oita2021]. Based on the electrophoresis band intensity, we combined parallel PCR1 reactions and diluted 5 µL of amplicon product with molecular grade water to standardize to a concentration of 1:15 [@tellezTraits2022; @sarmiento2017 for details]. We included DNA extraction blanks and PCR1 negatives in this step. We used a separate set of sterile pipettes, tips, and equipment to reduce contamination. We used a designated PCR area to restrict contact with pre-PCR materials [@oita2021].

We used 1 µL of PCR1 product from samples and negative control for a second PCR (PCR2) with barcode adapters (IBEST Genomics Resource Core, Moscow, ID, USA). Each PCR2 reaction (total 15 µL) contained 1X Phusion Flash High Fidelity PCR Master Mix, 0.075 µM of barcoded primers (forward and reverse pooled at a concentration of 2 µM) and 0.24mg/mL of BSA following Sarmiento [-@sarmiento2017] and U'Ren & Arnold [-@uren2017]. Before final pooling for sequencing, we purified the amplicons using Agencourt AMPure XP Beads (Beckman Coulter Inc, Brea, CA USA) to a ratio of 1:1 following the manufacturer's instructions. The products were evaluated with Bio Analyzer 2100 (Agilent Technologies, Santa Clara, CA, USA) [@tellezTraits2022]. We quantified the samples through University of Arizona Genetics Core, and subsequently diluted them to the same concentration to prevent over representation of samples with higher concentration, see (CITATION). Amplicons were normalized to 1 ng/µL, then pooled 2 µL of each for sequencing. No contamination was detected visually or by fluorometric analysis. To provide robust controls we combined 5 µL of each PCR1 negative and the DNA extraction blanks and sequenced them as samples. Ultimately, we combined samples into a single tube with 20 ng/µL of amplified DNA with barcoded adapters for sequencing on the Illumina MiSeq platform with Reagent Kit v3 (2 × 300 bp) following protocols from the IBEST Genomics Resource Core at the University of Idaho, USA. Again, we included the DNA extraction blanks and two PCR1 negatives and sequenced with samples. Sequencing yielded 3,778,081 total ITS1 reads.


### Mock Communities

We processed and sequenced 12 mock communities following the methods described above. This allowed us to assess the quality of our NGS data set. We used two mock communities that consisted of PCR product from DNA extractions of 32 phylogenetically distinct fungi, representing lineages that are typically observed as endophytes: Ascomycota, Basidiomycota, Zygomycota and Chytridiomycota [@oita2021; see @daru2019 for details]. In brief, we used six mock communities with equimolar concentrations of DNA from all 32 fungal taxa and another six mock communities with tiered concentrations of DNA from the same fungal taxa [@daru2019]. Each mock community was sequenced five times (i.e., five replicates) [@oita2021]. The read abundance from the equimolar and tiered communities was positively associated with the expected read number (with replicates as a random factor: R2Adj = 0.87, P = XXXX, see Supplementary Material). Using mock communities allowed us to evaluate the sequencing effectiveness in communities with known composition and structure [@bowman2021]. Henceforth, we used read abundance as a relevant proxy for biological OTU abundance [@uren2019].

### Bioinformatic analyses

We used VSEARCH (v2.14.1) for *de novo* chimera detection, dereplication and sequence alignment. VSEARCH is an open-source alternative to USEARCH that uses an optimal global aligner (full dynamic programming Needleman-Wunsch), resulting in more accurate alignments and sensitivity [@rognes2016]. For mock communities and experimental samples, we used forward reads (ITS1) for downstream bioinformatics analyses due to their high quality, rather than reverse reads (ITS4). Following Sarmiento et al. [-@sarmiento2017], we concatenated all reads in a single file and used FastQC reports to assess Phred scores above 30 and determine the adequate length of truncation. We processed 892,713 of sequence reads from mock communities and 3,778,081 from experimental samples. We truncated mock community and experimental sample reads to a length of 250 bp with command `fast_trunclen` and filtered them at a maximum expected error of 1.0 with command `fast_maxee`. We then clustered unique sequence zero radius OTUs (that is, zOTUs; analogous to amplicon sequence variants [@callahan2016]), by using commands `derep_fulllength` and `minseqlength` set at 2. Sequentially we denoised and removed chimeras from read sequences with commands `cluster_unoise`, and `uchime3_denovo`, respectively (see Supplementary YYY for details). Finally, we clustered zOTUs at a 95% sequence similarity with command `usearch_global` and option `id` set at 0.95. After which, 3,035,960 sequence reads from experimental samples remained.

Taxonomy was assigned with the Tree-Based Alignment Selector Toolkit [v2.2; @carbone2019] by placing unknowns within the Pezizomycotina v2 reference tree [@carbone2017]. ITS sequences were blasted against the UNITE database by the ribosomal database project (RDP) classifier. A total of 2147 OTUs hits were obtained and are composed of 68.6% Ascomycota, 26.8% Basidiomycota,\<0.05% Chytridiomycota, \<0.05% Glomeromycota, \<0.05% Mortierellomycota, \<0.05% Rozellomycota, 0.05% Kickxellomycota, and 4.2 % BLAST hit misses. Only OTUs representing Ascomycota were used for downstream statistical analyses since foliar endophyte communities in tropical trees are dominated by Ascomycota [@arnold2007].

For each OTU identified, we removed laboratory contaminants from experimental samples by substracting the average read count found in control samples from the DNA extraction and PCR steps. Our analysis of mock communities allowed use to identify and remove false OTUs from experimental samples, those with fewer than 10 reads, and remove 0.1% of the read relative abundance across all samples [@oita2021]. Removed reads represent the frequency of reads classified as contamination in the mock communities relative to the expected read count. Three experimental samples from *Theobroma cacao* ($n$=2) and *Apeiba membranacea* ($n$=1) were removed from all analyses due to incomplete entries. After pruning taxa with zero reads from experimental samples, we identified 260 OTUs found exclusively in control ($E-$) plants ($n$=78) and deemed them as artifacts resulting from the greenhouse conditions. Consequently, these were consistently eliminated from treatment ($E+$) plants across all species. We converted reads for each fungal OTU to proportions of total sequence abundance per sample to reduce differences in sampling effort, following previous studies (@weiss2017; @mcmurdie2014 ). We then removed singletons and obtained an average of 2,464,558 sequence reads in 529 Ascomycota OTUs across 156 experimental samples of 7 tree species. All analyses post taxonomic assignment were performed in R [v. 4.3.2; @rcoreteam2023] using the `phyloseq` package [@mcmurdie2013] and custom scripts (see Supplementary Material).

### Ant-endophyte interaction assays

A fresh fourth leaf was used in ant assays. To assess leaf-cutter ant damage, we introduced one detached leaf per plant per treatment to an actively foraging leaf-cutter ant colony for a two-hour assay. We presented leaf-cutter ant colonies with a choice of an E+ or an E- leaf on one disposable plastic plate next to an active nest trail. Carefully, we collected and placed debris from the trail leading up to the plate to lure ants into the plate. We initiated the ant assay as soon as one ant entered the plate and explored the leaf contents (for \~ 10-20 seconds). Every five minutes we took a digital photo of the choice arena until about 75% of the leaf content of one of the leaves was consumed. We used the digital photo at time zero and at the end of trial to quantify the leaf area removed using ImageJ [v1.52r; @schneider2012]. Ant recruitment was estimated by counting individuals in the choice arena throughout trial event.

### Pathogen assays

For the pathogen assays, we introduced an agar plug inoculated with hyphae of *Calonectria* sp. ($P+$ treatment), and an agar plug without the pathogen ($P-$ control) to similarly aged/sized leaves within 10-14 days after endophyte inoculations (CITATION). Leaves with the $P+$ or $P-$ treatment were misted with sterile water two times a day (morning and afternoon) to maintain moisture. After four days, we removed the plugs and took digital photos to analyze leaf area damage using ImageJ [v1.52r; @schneider2012].

### Replication Statement (maybe goes before statistical analyses)

*In the Materials and Methods section (before the description of the data analyses), authors **MUST** state i) the scale at which they seek to make inferences (for example at the level of species, populations or experimental units); ii) the scale(s) at which their treatment or factor of interest is(are) applied; and iii) the number of replicates for each level of treatment or factor. We have provided a table template for including this information, which the editors will use to decide whether the authors' inferences are supported and should therefore be peer-reviewed. Manuscripts without this table will be returned to authors.*

### Statistical Analyses

We explored how leaf functional traits and foliar fungal symbionts correlated to herbivory and pathogen damage on leaves. We present the analyses at the leaf and at the plant level. Leaf functional traits were measured and are presented in their raw form, at the leaf level, while FEF data was explored and is presented at the plant level. In analyses where leaf functional traits and FEF are combined we used averages of the leaf functional traits.

Principal Component Analysis (PCA) was used to reduce dimensions among covariates and reveal underlying interactions that could influence fungal endophyte abundance, diversity and community composition in seedlings. The PCA was computed using the `prcomp` function in R statistical software [@rcoreteam2023]. A complete PCA was computed with variables ACI, LT, LPS, and LMA (Fig. 2a). We then proceeded to compute a PCA with the data from leaves of plants used in the ant ($n$ = 210) and pathogen assays ($n$ = 192). To further explore the interactions of herbivory and pathogen damage ACI, LT, LPS and LMA we computed simple linear regressions ( Fig. S6 - S7).

To test for H2, we used a general linear mixed model (GLM) with herbivory and pathogen damage percentage (logit transformed) as the response variable. To determine which fixed effects to include in the models we used the `vif` function in *R* to calculate the variance inflation factor for all explanatory variables (ACI, LT, LPS and LMA) [@rcoreteam2023]. We then created a correlation matrix with `cor` function to assess correlations among covariates (SUPPLEMENTARY FIGURE?). We opted to maintain explanatory variables pertaining to physical barriers (LT, LPS and LMA) and exclude ACI from subsequent general linear models due to high collinearity with LPS (*r* = 0.54) and LMA (*r* = 0.73). Every variable kept exhibits some degree of collinearity and this is well recorded in the literature (CITE HERE).

# Results

Seedlings exposed to forest spore fall, *E+*, had a significantly higher proportion of leaf segments colonized by fungal endophytes across all species (data from cultures, Fig. S1) Using our molecular data set we saw that seedlings with *E+* treatment had a significantly higher fungal endophyte relative abundance (*p*  \<0.05) for all tree species when compared to *E-* treatment with the exception of *C. cainito* and *H. concinna* (Fig. 1). Despite these significant differences, there is a high degree of variability in endophyte relative abundance within each treatment type (Fig. 1).

For individuals of all tree species, we observed general differences in leaf functional traits summarized in Table 1. For LT we observed significant differences for *A. membranacea* , *Dypteryx* sp., and *L. panamensis* despite treatment type. Anthocyanins (ACI) were all leaf functional traits across all tree species. We did not see (CONTINUE HERE)

**THE PARAGRAPH ABOVE NEEDS A LOT OF WORK. I NEED THE PLOTS FOR THIS TO WRITE ABOUT IT.**

The PCA revealed how leaf traits (ACI, LT, LPS and LMA) were related. We plotted leaf trait data according to tree species groups on the PCA axes to show how the variance in the complete data set is explained by PC1 (60%) and PC2 (27%) (Fig. 2a). We observed that ACI, LPS and LMA loadings tracked along PC1 towards more negative values, showing correlation among these traits (Fig. 2a). Traits LT and LPS were orthogonal to each other in Fig. 2a, indicative of low correlation. We note distinct grouping of species along PC1 such as *C. alliodora* in the direction of positive values of PC1 and *C. cainito* towards negative values. Along PC1 we see distinct and tight clustering according to species for all except *H. concinna* and *A. membranacea* which overlap with various other species. We note that LT loading tracks towards negative values along PC2 (Fig.2a). Clear species groupings are detected, such as *Dypterix* sp. located towards positive values and *L. panamensis* towards negative values of the PC2 axis. We note a similar relationship between the leaf traits with respect to PC1 and PC2 in individual seedlings used for herbivory versus pathogen damage trials (Fig. 2b-2c). The PCA of leaf traits from seedlings used in herbivory trials has a PC1 explaining 57.5% of the variance and a PC2 explaining 28% of the variance in the subset data (Fig. 2b). We saw an inversion of the LT loading in direction of positive values, as well as the main tree species clustered (i.e. *Dypteryx* sp. and *A. membranacea*) along PC2 (Fig. 2b) with respect to Fig. 2a. The PCA of leaf traits from seedling used in pathogen damage trials has a PC1 explaining 64% of the variance and a PC2 explaining 25% of the variance in the subset data (Fig. 2c). We detected similar relationships among leaf traits and PC axes in the pathogen damage subset data (Fig. 2c) when compared to the complete data set (Fig. 2a).

Simple linear regressions of herbivory (%) against PC1 and PC2 revealed a statistically significant positive relationship (*p* \<0.001) (Fig. 3a and 3b). Even though we note large spread in the data (Fig. 3a and 3b), we see a statistically significant positive trend of herbivory plotted against PC1, where positive values represent greater values of ACI, LPS and LMA. Herbivory plotted against PC2 shows a statistically significant positive trend, where positive values represent greater LT (Fig. 3b). Percent pathogen damage plotted against PC1 revealed a statistically significant positive relationship (*p* = \<0.001), in which positive values represent greater values of ACI, LPS and LMA (Fig. 3c). We did not see a statistically significant relationship (*p* = 0.223) between pathogen damage and PC2 (Fig. 3d).

**TALK ABOUT SIMPLE LINEAR REGRESSIONS OF SUPPLEMENTARY FIGURES?**

# Discussion

# References

::: {#refs}
:::

# Figures

```{r, Packages}
#| echo: false
#| eval: true
#| warning: false
# Data manipulation and visualizations ####
library("rmarkdown")
library("conflicted")
library("devtools")
#library("DiagrammeR")
library("factoextra")
library("ggfortify")
library("ggiraph")
library("ggiraphExtra")
library("ggplot2")
library("ggpubr")
library("gridExtra")
library("ggthemes")
library("ggraph")
library("hrbrthemes")
library("igraph")
library("tidyverse")
library("plotrix")
#library("viridis")
library("MetBrewer")
library("formatR")
library("wesanderson")
#library("knitr")
library("data.table")
library("kableExtra")
library("janitor")
library("flextable")
library("huxtable")
library("vtable")
library("gt")
library("gtsummary")
library("officer")


# Stats ####
library("broom")
library("vegan")
library("nlme")
library("MASS")
library("car") #For type 3 Anova with Anova() function.
library("PerformanceAnalytics")
library("corrr")
library("permute")
library("lattice")
library("pls")
library("buildmer")
library("lme4")
library("sjPlot")
library("glmmTMB")
library("indicspecies")

# Phylogenetic analyses #source("https://raw.githubusercontent.com/joey711/phyloseq/master/inst/scripts/installer.R",local = TRUE)
library("mgcv")
library("phyloseq")
library("ape")
library("metagMisc")
#remotes::install_github("vmikk/metagMisc")
#library("speedyseq")
library("picante")
#source("http://bioconductor.org/biocLite.R")


# Preference of conflicted functions among packages ####
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer_all("phyloseq")
```

```{r, Clean sequences}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

#Working directory
rm(list = ls()) 
#setwd("H:/.shortcut-targets-by-id/0B9v0CdUUCqU5VVR4a3BvNHM1Z28/VBL_users/Grad_Students/Bolivar/Dissertation/Leaf_Traits_Panama/Data/Sequence_analyses")

#Working Directory and Path for Windows
#setwd("C:/Users/boloq/Box/Dissertation/Leaf_Traits_Panama/Data/Aim3_Sequence_analyses")
#save.path <- "C:/Users/boloq/Box/Dissertation/Leaf_Traits_Panama/Data/Aim3_Sequence_analyses"

#Working Directory and Path for Linux
setwd("/home/baponte/Boxx/Dissertation/Leaf_Traits_Panama/Data/Aim3_Sequence_analyses/")
# 
save.path <- ("/home/baponte/Boxx/Dissertation/Leaf_Traits_Panama/Data/Aim3_Sequence_analyses/")



set.seed(123)
# Cleaned (decontaminated) sample sequences ####
#csamp
# csamp <- read.csv("clean_data/otu_data/all_cleaned_at_10_percent.csv")
# csamp[,2:157] <- lapply(csamp[,2:157], as.integer)
# csamp <- csamp %>%
#   rename(OTU_ID = X) %>%
#   column_to_rownames(var = "OTU_ID") %>%
#   na.omit() %>%
#   na.fail() %>%
#   as.matrix()

# Saving
# saveRDS(csamp, file.path(save.path, "R_objects", "clean_sequences.rds"))

# Reading
csamp <- readRDS(file.path(save.path, "R_objects", "clean_sequences.rds"))
```

```{r, TBAS}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

# T-BAS taxonomic assignment ####
#tbas
# tbas <- read.csv("unite_report2BSDHQZP.csv")
# tbas <- tbas %>%
#   dplyr::filter(phylum == "Ascomycota") %>%
#   select(-match,-e.value, -percent, -coverage, -bitscore) %>% #eliminating some columns that I am not really using
#   na.omit()%>%
#   rename( OTU_ID = query) %>%
#   column_to_rownames(var = "OTU_ID") %>%
#   na.omit() %>%
#   na.fail() %>%
#   as.matrix()

# Saving
#saveRDS(tbas, file.path(save.path, "R_objects", "tbas_filtered.rds"))

# Reading
tbas <- readRDS(file.path(save.path, "R_objects", "tbas_filtered.rds"))
```

```{r, Leaf trait variables data}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

data <- read.csv("field_data/Aim3_Bolivar_Summer_2019_Leaf_Traits_datasheet.csv")

# data2
# Data set created on May 23, 2023 for analysis with raw data.
# data2 <- data %>% 
#   separate(Unique_ID, c("Trial_Code", "ELoad", "Species2", "Replicate")) %>%
#   unite("Sample_name", Species2:Replicate, sep = "") %>%
#   relocate(Sample_name, Trial_Code, E_load, .after = Species) %>%
#   select(!c(5, 15:17, 20)) %>%
#   rename( Anthocyanins = Anthocyanins..aci., 
#           Thickness = Thickness..micro.m.,  
#           Toughness =Toughness..lbf., 
#           LMA = LMA_dw, 
#           Abun_3 = Abundance_Proportion_day3, 
#           Abun_7 = Abundance_Proportion_day7)

# Saving
# saveRDS(data2, file.path(save.path, "R_objects", "leaf_data_raw_analyses.rds"))

# Reading
data2 <- readRDS(file.path(save.path, "R_objects", "leaf_data_raw_analyses.rds"))

# ndata (new_data)
# This data set can also be used to conduct analysis with "raw" data . It is summarized by leaf.

# ndata <- data %>%  
#   group_by(Species, Unique_ID, Trial_type, E_load, Leaf_ID) %>%
#   summarise(Anthocyanins..aci. = mean(Anthocyanins..aci., na.rm = TRUE), 
#             Thickness..micro.m. = mean(Thickness..micro.m., na.rm = TRUE),
#             Toughness..lbf. = mean(Toughness..lbf., na.rm = TRUE),
#             LMA_dw = mean(LMA_dw, na.rm = TRUE),
#             Abundance_Proportion_day3 = mean(Abundance_Proportion_day3, na.rm = TRUE),
#             Abundance_Proportion_day7 = mean(Abundance_Proportion_day7, na.rm = TRUE)) %>%
#    separate(Unique_ID, c("Trial_Code", "ELoad", "Species2", "Replicate")) %>%
#   unite("Sample_name", Species2:Replicate, sep = "") %>%
#   relocate(Species, Trial_Code,.after = Sample_name) %>%
#   rename( Anthocyanins = Anthocyanins..aci., 
#           Thickness = Thickness..micro.m.,  
#           Toughness =Toughness..lbf., 
#           LMA = LMA_dw, 
#           Abun_3 = Abundance_Proportion_day3, 
#           Abun_7 = Abundance_Proportion_day7) %>%
#   select(!ELoad) %>%
#   ungroup() %>%
#    mutate_if(is.character, as.factor) %>%
#   na.omit() %>% 
#   na.fail()

# Saving
# saveRDS(ndata, file.path(save.path, "R_objects", "new_leaf_data.rds"))

# Reading
ndata <- readRDS(file.path(save.path, "R_objects", "new_leaf_data.rds"))

# Splitting and relocating Unique_ID column 
# Extract names to match to phyloseq objects separate(Species2, c("Species3", "Numbers"), sep = "(?<=[A-Za-z])(?=[0-9])")

# ndata2 (new_data2)
# Data frame is summarized by plant (n = 156)

# ndata2 <- ndata %>% 
#   select(!c(Abun_3, Abun_7)) %>%
#   mutate_if(is.character, as.factor) %>%
#   group_by(Sample_name, Species, Trial_type, Trial_Code, E_load) %>%
#   summarise(Anthocyanins = mean(Anthocyanins, na.rm = TRUE),
#             Thickness = mean(Thickness, na.rm = TRUE),
#             Toughness = mean(Toughness, na.rm =TRUE),
#             LMA = mean(LMA, na.rm = TRUE)) 

# Saving
# saveRDS(ndata2, file.path(save.path, "R_objects", "new_leaf_data2.rds"))

# Reading
ndata2 <- readRDS(file.path(save.path, "R_objects", "new_leaf_data2.rds"))
```

```{r, Ant assay data}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

#ants <- read.csv("field_data/Aim3_Bolivar_Summer_2019_Ant_Assay_datasheet.csv")
# 
# ants <- ants %>%
#   separate(Unique.ID, c("Trial_Code", "ELoad", "Species2", "Replicate")) %>%
#   unite("Sample_name", Species2:Replicate, sep = "") %>%
#   relocate(Species, Trial_Code,.after = Sample_name)%>%
#   slice(-c(11,12)) %>%
#   dplyr::filter(Trial_success!="0") %>%
#   select(!c(Leaf_ID, 
#             Colony_ID, 
#             Picture_ID, 
#             Colony_location_Pipeline.Gamboa, 
#             Attempt, 
#             Date_analyzed, 
#             X_coordinates, 
#             Y_coordinates, 
#             Elevation_meters, 
#             ELoad, 
#             Analyzer, 
#            
#             Time_start_trial, 
#             Time_first_contact, 
#             Time_first_cut, 
#             Time_end_elapsed_trial )) %>%
#   mutate(Ant_percent_leafloss = -100*{(Leaf_area_final-Leaf_area_initial)/Leaf_area_initial}) %>%
#   mutate_if(is.character, as.factor)

# Saving
# saveRDS(ants, file.path(save.path, "R_objects", "ants_data.rds"))

# Reading
ants <- readRDS(file.path(save.path, "R_objects", "ants_data.rds"))


# Just the area loss
ants2 <- ants %>%
  select(c(1,3,4,9,10))

ants3 <- ants %>%
  select(c(1,3,4,5,9,10))
```

```{r, Pathogen Assay Data}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

# patho <- read.csv("field_data/Aim3_Bolivar_Summer_2019_Patho_Assay_datasheet.csv")
# 
# patho <- patho %>%
#   separate(Unique.ID, c("Trial_Code", "ELoad", "Species2", "Replicate")) %>%
#   unite("Sample_name", Species2:Replicate, sep = "") %>%
#   relocate(Species, Trial_Code,.after = Sample_name) %>%
#   slice(-c(41:48, 97:100)) %>%
#   select(!c(ELoad,
#             Leaf_ID,
#             Trial_start_time,
#             Date, 
#             ImageJ_link, 
#             X, 
#             Notes)) %>%
#   rename(Treatment = Treatment_Ctrl_Pathogen) %>%
#   mutate(Pathogen_percent_damage = (Damage_area/Leaf_area)) %>%
#   mutate_if(is.character, as.factor)

# Saving
# saveRDS(patho, file.path(save.path, "R_objects", "pathogen_data.rds"))

# Reading
patho <- readRDS(file.path(save.path, "R_objects", "pathogen_data.rds"))


#Just the area damaged
patho2 <- patho %>%
  select(c(1,3,4,8,9,12))


patho3 <- patho %>%
  select(c(1,3,4,6,7,8,9,12))
```

```{r, Objects and dataframes}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

### Phyloseq objects ####

# OTU Table: 1774 OTU with 156 Samples
# OTU <- otu_table(csamp, taxa_are_rows = TRUE)
# OTU

# Saving
# saveRDS(OTU, file.path(save.path, "R_objects", "otu_table.rds"))

# Taxonomic Table: 1473 OTU by 7 taxonomic ranks
# TAX <- tax_table(tbas)

# Saving
# saveRDS(TAX, file.path(save.path, "R_objects", "taxonomy_table.rds"))

# SAMP (sample metadata)

# SAMP <- ndata2 %>%
#   column_to_rownames(var = "Sample_name")
# SAMP <- sample_data(SAMP)

# Saving
# saveRDS(SAMP, file.path(save.path, "R_objects", "samp_data.rds"))


# Merging phyloseq objects ####
# pq1 <- phyloseq(OTU, TAX, SAMP)

# Saving
# saveRDS(pq1, file.path(save.path, "R_objects", "phyloseq_main.rds"))

# Reading
pq1 <- readRDS(file.path(save.path, "R_objects", "phyloseq_main.rds"))

# Random tree ####
#random_tree <- rtree(ntaxa(pq), rooted=TRUE, tip.label=taxa_names(pq))

```

```{r, Mareli code}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

# pq2 <- prune_taxa(taxa_sums(pq1) > 0, pq1)
# ntaxa(pq2) #There are 488 taxa with 0 reads.

# Saving
# saveRDS(pq2, file.path(save.path, "R_objects", "phyloseq_pq2.rds"))

# Reading
pq2 <- readRDS(file.path(save.path, "R_objects", "phyloseq_pq2.rds"))

# Subset of pq1 -- only E+ samples and OTUs.
#Important -- don't remove OTUs with 0 reads here, because we want to know which ones have no reads in E+ but DO have reads in E-.
pq2E <- subset_samples(pq2, E_load == "E+")
#ntaxa(pq2E) #1219 taxa and 78 samples

# Eliminate E- only OTUs. Keep OTUs with more than 0 reads in subset.
pq2_EminusRemoved <- prune_taxa(taxa_sums(pq2E) > 0, pq2E)
#ntaxa(pq2_EminusRemoved) #959 taxa remain. 260 OTUs removed.

#If OTU has 0 reads in E+, it will have reads in E-, so this prunes pq2E and identifies all OTUs that have 0 reads in E+, which by default, are the OTUs that DO have reads in E-.
pq2_EminuOnly <- prune_taxa(taxa_sums(pq2E) == 0, pq2E)
#pq2_EminuOnly #260 taxa and 78 samples

# Gets names of OTUs and make a data frame with column name the same as in pq2
EminusOTUs2 <- taxa_names(pq2_EminuOnly)
EminusOTUsList2 <- as.data.frame(EminusOTUs2)
#write.table(EminusOTUsList2, "clean_data/otu_data/Aim3_RemovedOTUsList.txt")

# Get vectors (names) of numbered OTUs from pq1
OTU_ID <- rownames(otu_table(pq1))

# Returns all OTU names that don't have a match in Eminus OTUs.
notShared <- setdiff(OTU_ID, EminusOTUs2)

# Subset phyloseq object to only these OTUs
pq2ET <- subset(otu_table(pq2), rownames(otu_table(pq2)) %in% notShared)

# Exported into "Sequence Analyses"
#write.csv(pq2ET, "clean_data/Aim3_OTU_phyloseq_trimmed.csv")

# New phyloseq object without E- OTUs.
newpq <- merge_phyloseq(pq2ET, tax_table(pq2), sample_data(pq2), rtree(ntaxa(pq2), rooted=TRUE, tip.label=taxa_names(pq2)))

# Relative Abundance of 959 OTUs. No removal of singletons yet.

# rawra <- transform_sample_counts(newpq, function(x)x/sum(x))
# rawRA <- subset(otu_table(rawra), rownames(otu_table(rawra)) %in% notShared)
# write.csv(rawRA, "clean_data/otu_data/Aim3_OTU_Relative_Abundance_singletons_untrimmed.csv")

# Outputs of this script -- OTU table without E minus only OTUs and phyloseq object with E- OTUs removed. No removal of singletons yet.

# End of Mareli's Code #
```

```{r, Singleton removal}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

# Filtering Taxa: Removal of singletons ####
 # Removal of  singletons
newpq1 <- filter_taxa(newpq, function (x) {sum(x > 0) > 1}, prune=TRUE)
# The result is 2,464,558 sequence reads from 569 taxa in 156 samples.

# Relative abundance calculation ####
# Code below is for making the .csv file. After that refer to df rawra from .csv file.

# newpqRA <- transform_sample_counts(newpq1, function(x)x/sum(x))
# rabun <- subset(otu_table(newpqRA), rownames(otu_table(newpqRA)) %in% notShared)
# write.csv(rabun, "clean_data/otu_data/Aim3_OTU_Relative_Abundance_singletons_trimmed.csv")
#GPfr = filter_taxa(GPr, function(x) mean(x) > 1e-5, TRUE)


# Richness data frame ####
rich <- estimate_richness(newpq1, split = TRUE, measures = c("Observed","Shannon"))

rich <- rich %>%
  rownames_to_column() %>%
  rename(Sample_name = rowname)

# Phyloseq object to data frames ####

# Cleaned: no singletons
newpqDF <- phyloseq_to_df(newpq1, addtax = T, addtot = F, addmaxrank = F, sorting = "abundance")
#write.csv(newpqDF, "clean_data/otu_data/Aim3_OTUs_assigned_nonsingletons.csv")
```

```{r, Loading phyloseq products}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

#These are the data frames resulting from the phyloseq data wrangling.

#The 569 OTUs and 156 samples (total abundances)
newpqDF <- read.csv("clean_data/otu_data/Aim3_OTUs_assigned_nonsingletons.csv")
newpqDF <- newpqDF %>%  # Code from the Taxonomical assginment section dopes the same. This is just calling it directly from the /csv to avoid running all the code. 
  select(!c(1))

# OTUs 959 and 156 samples (total abundances)

# eOTU <- read.csv("clean_data/Aim3_OTU_phyloseq_trimmed.csv") 
# Can upload as data frame. Use for distance matrices.
# 
# eOTU2 <- eOTU %>%
#   rename(OTU_ID = X) %>%
#   column_to_rownames(var = "OTU_ID") %>%
#   t() %>%
#   as.data.frame() %>%
#   rownames_to_column() %>%
#   rename(Sample_name = rowname)

# Saving
#saveRDS(eOTU2, file.path(save.path, "R_objects", "eOTU2.rds"))

# Reading
eOTU2 <- readRDS(file.path(save.path, "R_objects", "eOTU2.rds"))


# Just 569 OTUs and 156 samples (total abundances)
# cOTU <- newpqDF %>%
#   select(-kingdom, -phylum, -class, -order, -family, -genus, -species) %>%
#   column_to_rownames(var = "OTU") %>%
#   as.matrix() %>%
#   t() %>%
#   as.data.frame() %>%
#   rownames_to_column() %>%
#   rename(Sample_name = rowname)

# Saving
# saveRDS(cOTU, file.path(save.path, "R_objects", "clean_OTU.rds"))

# Reading
cOTU <- readRDS(file.path(save.path, "R_objects", "clean_OTU.rds"))

# Relative Abundance matrix (trimmed to 569 OTUs)
# rabun <- read.csv("clean_data/otu_data/Aim3_OTU_Relative_Abundance_singletons_trimmed.csv")
# rabun <- rabun %>%
#   rename(OTU_ID = X) %>%
#   column_to_rownames(var = "OTU_ID") %>%
#   na.omit() %>%
#   na.fail() %>%
#   as.matrix()

# Saving
# saveRDS(rabun, file.path(save.path, "R_objects", "rabun_tidy.rds"))

# Reading
rabun <- readRDS(file.path(save.path, "R_objects", "rabun_tidy.rds"))

# Relative Abundance matrix (singletons untrimmed Ascomycota 959 OTUs)
# rawra <- read.csv("clean_data/otu_data/Aim3_OTU_Relative_Abundance_singletons_untrimmed.csv")
# rawra <- rawra %>%
#   rename(OTU_ID = X) %>%
#   column_to_rownames(var = "OTU_ID") %>%
#   na.omit() %>%
#   na.fail() %>%
#   as.matrix()

# Saving
# saveRDS(rawra, file.path(save.path, "R_objects", "rawra_tidy.rds"))

# Reading
rawra <- readRDS(file.path(save.path, "R_objects", "rawra_tidy.rds"))

```

## Figure 1

```{r, Master data set}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

#This contains all the OTU id's per sample type. Hence, 156 (# samples) observations per OTU_ID. The phyloseq object achieves the same purpose. This data set is easier to use with other functions or test not supported by phyloseq.

# Master ####
#put all data frames into list
df_list_ant <- list(ndata2, cOTU, ants2, patho2, rich)    

#merge all data frames together
master <- df_list_ant %>% 
  reduce(left_join, by= "Sample_name", "E_load") %>%
  mutate(Total_reads = sum(across(starts_with("OTU")))) %>%
  group_by(Species) %>%
  mutate(Relative_Abundance = Total_reads/sum(Total_reads)*100) %>%
  select(c(1:9, 579:591)) %>%
  select(!c(E_load,
            E_load.y,
            Trial_Code,
            Trial_Code.y)) %>%
  relocate(Treatment, E_load.x, .after = Trial_type) %>%
  rename(Pathogen_Damage_area = Damage_area, 
         E_load = E_load.x, 
         Trial_Code = Trial_Code.x)
```

```{r, Ant Master Data}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

# Masterant on a per plant level
masterant <- master %>%
  subset(Trial_type == "Ant") %>%
  drop_na(Trial_Code) %>%
  select(!c(4, 13:14)) %>%
  na.omit()

# Masterant on a per leaf level (70 plants, 3 leaves per plant = 210 leaves measured)
df_list_ant2 <- list(ndata, cOTU, ants2, patho2, rich)

masterant2 <- df_list_ant2 %>%
  reduce(left_join, by= "Sample_name", "E_load") %>%
 mutate(Total_reads = sum(across(starts_with("OTU")))) %>%
  group_by(Species) %>%
  mutate(Relative_Abundance = Total_reads/sum(Total_reads)) %>%
  select(c(1:10, 584:594)) %>%
  select(!c(E_load,
            Trial_Code)) %>%
  relocate(Treatment, E_load.x, .after = Trial_type) %>%
  rename(Pathogen_Damage_area = Damage_area, 
         E_load = E_load.x, 
         Trial_Code = Trial_Code.x) %>%
  subset(Trial_type == "Ant") %>%
  drop_na(Trial_Code) %>%
  select(!c(5, 14:15)) %>%
  na.omit() %>%
  mutate(logit_herbivory = logit(Ant_percent_leafloss))
```

```{r, Pathogen Master data}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false


# Pathogen Observations per plant level
masterpat <- master %>%
  subset(Trial_type == "Pathogen") %>%
  select(!c(11,12)) %>%
  na.omit()

# Pathogen Observations per leaf level (64 plants, 3 leaves per plant = 192 leaves measured)
# masterpat2

masterpat2 <- df_list_ant2 %>%
  reduce(left_join, by= "Sample_name", "E_load") %>%
 mutate(Total_reads = sum(across(starts_with("OTU")))) %>%
  group_by(Species) %>%
  mutate(Relative_Abundance = Total_reads/sum(Total_reads)) %>% 
  select(c(1:10, 584:594)) %>%
  select(!c(E_load,
            Trial_Code)) %>%
  relocate(Treatment, .after = Trial_type) %>%
  rename(Pathogen_Damage_area = Damage_area, 
         E_load = E_load.x, 
         Trial_Code = Trial_Code.x) %>%
  subset(Trial_type == "Pathogen") %>%
  select(!c(12:13)) %>%
  na.omit() %>%
  mutate(logit_pathogenicity = logit(Pathogen_percent_damage)) 

#mutate(Pathogen_percent_damage = pmin(pmax(Pathogen_percent_damage, 0), 1)) %>%  # Rescale values between 0 and 1
  #mutate(logit_damage = logit(Pathogen_percent_damage))
#masterpat2$log_damage <- log(masterpat2$Pathogen_percent_damage)
```

```{r fig1}
#| echo: false
#| eval: true
#| warning: false
#| fig.width: 7
#| fig.height: 4.5
#| fig.cap: "Relative abundance (RA) of Ascomycota OTUs of seven tree species used in the study. (a) Violin plots show individuals' RA and and its distribution by species. The horizontal line within the violins represent the mean RA per species. (b) The RA of OTU's by treatment withing each tree species. Pink filled violin plots represent low endophyte (*E-*) treatment and yellow filled represent high endophyte (*E+*) treatment. Relative abundance is the percentage of endophyte colonization within individuals of the same species. Significance levels are represented by asterisks [*p* = 0.05 (\\*), *p* = 0.01 (\\**), and *p* = 0.001 (\\***)]."

# RA per E_load

newname <- c("A. membranacea", "C. cainito", "C. alliodora", "Dypterix .sp", "H. concinna", "L. panamensis", "T. cacao")

names(newname) <- c("APEIME", "CHRYCA", "CORDAL", "DYPTE", "HEISCO", "LACPA", "THEOCA")

RAE <- ggplot(data= master, aes(x = E_load, y = Relative_Abundance)) +
  geom_violin(aes(fill = E_load)) +
  #geom_boxplot(width=0.1, color="grey30", alpha=0.2) +
  geom_crossbar(stat="summary", fun = mean, fun.max = mean, fun.min = mean,  fatten = 2, width = 0.5) +
  geom_point(color="grey15", alpha = 0.4,size = 2, position = position_jitter(w=0.05)) +
  scale_fill_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  theme_classic(base_size = 14)+
  theme(panel.grid.major = element_line(colour = "grey"),
        panel.grid.minor = element_line(colour = "grey"),
        strip.background = element_rect(fill = "white"),
        axis.line.x.bottom = element_blank(), 
        strip.text.x = element_text(colour = "grey15", face = "italic"),
        panel.border = element_rect(linetype = "blank", fill = NA)) +
  labs(x="", y="Relative Abundance of Ascomycota", face = "bold")+
  theme(legend.position="right", 
        legend.title = element_text(face = "bold"),
        legend.text = element_text(size = 14),
        plot.title = element_text(color="black", size = 14, face="bold"),
        axis.text.x=element_blank()) +
  #labs(caption = "*Outliers and singletons removed.") +
  stat_compare_means(comparisons = list(c("E-", "E+")),
                     method = "t.test",
                     label = "p.signif", label.y = 25, bracket.size = 0.65) +
  facet_wrap(~Species, labeller = as_labeller(newname))
  
#RAE


RAE_bar <- ggplot(data= master, aes(x = Species, y = Relative_Abundance)) +
  geom_bar(stat="identity", aes(fill = E_load), position = "stack") +
  scale_fill_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels=c(newname)) +
  theme_classic(base_size = 14)+
  theme(strip.text.x = element_text(colour = "grey15", face = "italic"),
        panel.border = element_rect(linetype = "blank", fill = NA)) +
  labs(x="", y="Relative Abundance of Ascomycota", face = "bold")+
  theme(legend.position="right",
        legend.title = element_blank(),
        legend.text = element_text(size = 14),
        plot.title = element_text(color="black", size = 14, face="bold"),
        axis.text.x=element_text(face = "italic", hjust = 1, angle = 30))

#RAE_bar

# Arranged as a grid
fig1<- ggarrange(RAE, RAE_bar, nrow = 1, ncol=2, widths = c(1.5, 1), common.legend = TRUE, legend="bottom", label.x = 0, vjust = 1, labels=c("(a)","(b)"))

fig1


# Saving
#ggsave(filename="./plots/Aim3_Fig1.png", plot = fig1, dpi=600, units=c("mm"), width = 210, height = 180, bg ="white")
#

```

## Figure 2

```{r, Full PCA}
#| echo: false
#| eval: true
#| warning: false
#| tidy: true

# PCA using covariates to explain species richness/abundance ####
data.pca <- ndata[c(7,8,9,10)]
data.pca <- data.pca %>%
  rename(ACI = Anthocyanins, LT = Thickness, LPS = Toughness) #Renaming columns for plotting purposes.

###Run this to create pca with prcomp function
pca<-prcomp(data.pca, scale=TRUE)
pca$rotation=-pca$rotation
pca$x=-pca$x

#Checking the PCA
#plot(pca,type = "lines")
#biplot(pca) # Base type PCA

# PCA using autoplot() and prcomp()and modifying with ggplot syntax ####
auto <- autoplot((pca), data = data.frame(ndata), # For some reason this functions require data to be data= data.frame()
         alpha=0, #Setting alpha to zero render the automatic circle point null.Manipulate shapes with geom_point(). 
         loadings = TRUE,loadings.colour = "black",
         loadings.label=TRUE, loadings.label.colour="black",
         loadings.label.size= 4, size = 7, loadings.label.vjust = 1, 
         loadings.label.hjust = 1) + 
  geom_point(aes(fill = Species, color = Species, shape = E_load), alpha = 0.6, size = 3) +
  geom_hline(yintercept = 0, colour = "gray45") +
  geom_vline(xintercept = 0, colour = "gray45") +
  scale_color_manual(labels=c("A. membranacea", 
                              "C. cainito", 
                              "C. alliodora", 
                              "Dypterix .sp", 
                              "H. concinna", 
                              "L. panamensis", 
                              "T. cacao"),
                     values = met.brewer(name = "Cross", n = 8, type="discrete")) +
  stat_ellipse(aes(color=Species), geom = "path", size = 1, position = "identity", type = "t", linetype = 1, level = 0.95, segments = 51, na.rm = FALSE, show.legend = NA, inherit.aes = TRUE) +
  scale_fill_discrete(labels = c("A. membranacea", 
                                 "C. cainito", 
                                 "C. alliodora", 
                                 "Dypterix .sp", 
                                 "H. concinna", 
                                 "L. panamensis", 
                                 "T. cacao")) +
  scale_shape_manual(name = "Treatment", labels = c("E-", "E+"), values = c(16, 17)) +
  theme_classic(base_size = 16) +
  #labs(title = "(a)") + 
  theme(plot.title = element_text(color="black", size = 14, face="bold"),
        legend.title = element_text(face = "bold"),
        legend.text = element_text(color="black", size = 14, face="italic"))

#caption = expression("ACI = anthocyanins, LPS = leaf punch strength, LMA = leaf mass per area, LT = leaf thickness. All leaf replicates per species ("~ italic("n") ~ "= 467).") #This goes in the labs() arguments

auto$layers <- c(auto$layers, auto$layers[[2]], auto$layers[[3]]) # This adds/copies layers 2-3 and overlays them. It makes the arrows be on top of the points. There must be a better ways of doing this.

#Checking if all is good.
auto <- auto +
  theme(plot.caption = element_text(size = 6, hjust = 1, vjust = 1))
#auto 

#ggsave(filename="./plots/Aim3_PCA_SEPT252023.png", plot = auto, dpi=600, units=c("mm"), width = 180, height = 180, bg = "white")
```

```{r, Ant PCA, tidy=TRUE}
#| echo: false
#| eval: true
#| warning: false

# PCA using covariates to explain species richness/abundance ####
ant_pcadata <- masterant2[c(7,8,9,10)]
ant_pcadata <- ant_pcadata %>%
  rename(ACI = Anthocyanins, LT = Thickness, LPS = Toughness) #Renaming columns for plotting purposes.


###Run this to create pca with prcomp function
ant.pca <-prcomp(ant_pcadata, scale=TRUE)
ant.pca$rotation=-ant.pca$rotation
ant.pca$x=-ant.pca$x

# Plot
auto_ant <- autoplot((ant.pca), data = data.frame(masterant2), # For some reason this functions require data to be data= data.frame()
         alpha=0, #Setting alpha to zero render the automatic circle point null.Manipulate shapes with geom_point(). 
         loadings = TRUE,loadings.colour = "black",
         loadings.label=TRUE, loadings.label.colour="black",
         loadings.label.size= 4, size = 7, loadings.label.vjust = 0, 
         loadings.label.hjust = 1.2) + 
  geom_point(aes(fill = Species, color = Species, shape = E_load), alpha = 0.6, size = 3) +
  geom_hline(yintercept = 0, colour = "gray45") +
  geom_vline(xintercept = 0, colour = "gray45") +
  scale_color_manual(values = met.brewer(name = "Cross", n = 8, type="discrete")) +
  stat_ellipse(aes(color=Species), geom = "path", size = 1, position = "identity", type = "t", linetype = 1, level = 0.95, segments = 51, na.rm = FALSE, show.legend = NA, inherit.aes = TRUE) +
  theme_classic(base_size = 14) +
  #labs(title = "(b)") +
  theme(plot.title = element_text(color="black", size = 14, face="bold")) +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none")
# caption = expression("ACI = anthocyanins, LPS = leaf punch strength, LMA = leaf mass per area, LT = leaf thickness. All leaf replicates per species ("~ italic("n") ~ "= 210).")
  
  


auto_ant$layers <- c(auto_ant$layers, auto_ant$layers[[2]], auto_ant$layers[[3]]) # This adds/copies layers 2-3 and overlays them. It makes the arrows be on top of the points. There must be a better ways of doing this.

#Checking if all is good.
auto_ant <- auto_ant +
  theme(plot.caption = element_text(size = 6, hjust = 1, vjust = 1))
#auto_ant

#ggsave(filename="./plots/Aim3_Ant_PCA_07102023.png", plot = auto_ant, dpi=600, units=c("mm"), width = 180, height = 180, bg = "white")
```

```{r, Pathogen PCA, tidy=TRUE}
#| echo: false
#| eval: true
#| warning: false
#
# PCA using covariates to explain species richness/abundance ####
pat_pcadata <- masterpat2[c(8,9,10,11)]
pat_pcadata <- pat_pcadata %>%
  rename(ACI = Anthocyanins, LT = Thickness, LPS = Toughness) #Renaming columns for plotting purposes.


###Run this to create pca with prcomp function
pat.pca <-prcomp(pat_pcadata, scale=TRUE)
pat.pca$rotation=-pat.pca$rotation
pat.pca$x=-pat.pca$x

# Plot
auto_pat <- autoplot((pat.pca), data = data.frame(masterpat2), # For some reason this functions require data to be data= data.frame()
         alpha=0, #Setting alpha to zero render the automatic circle point null.Manipulate shapes with geom_point(). 
         loadings = TRUE,loadings.colour = "black",
         loadings.label=TRUE, loadings.label.colour="black",
         loadings.label.size= 4, size = 7, loadings.label.vjust = 0, 
         loadings.label.hjust = 1.2) + 
  geom_point(aes(fill = Species, color = Species, shape = E_load), alpha = 0.6, size = 3) +
  geom_hline(yintercept = 0, colour = "gray45") +
  geom_vline(xintercept = 0, colour = "gray45") +
  scale_color_manual(values = met.brewer(name = "Cross", n = 8, type="discrete")) +
  stat_ellipse(aes(color=Species), geom = "path", size = 1, position = "identity", type = "t", linetype = 1, level = 0.95, segments = 51, na.rm = FALSE, show.legend = NA, inherit.aes = TRUE) +
  theme_classic(base_size = 14) +
  #labs(title = "(c)") +
  theme(plot.title = element_text(color="black", size = 14, face="bold")) + 
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none")
# caption = expression("ACI = anthocyanins, LPS = leaf punch strength, LMA = leaf mass per area, LT = leaf thickness. All leaf replicates per species ("~ italic("n") ~ "= 210).")
  

auto_pat$layers <- c(auto_pat$layers, auto_pat$layers[[2]], auto_pat$layers[[3]]) # This adds/copies layers 2-3 and overlays them. It makes the arrows be on top of the points. There must be a better ways of doing this.

#Checking if all is good.
auto_pat <- auto_pat +
  theme(plot.caption = element_text(size = 6, hjust = 1, vjust = 1))
#auto_pat

#ggsave(filename="./plots/Aim3_Pathogen_PCA_08162023.png", plot = auto_pat, dpi=600, units=c("mm"), width = 180, height = 180, bg = "white")
```

```{r, Fig2 Grid PCA}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.width:  10
#| fig.height: 10
#| fig.cap: "Leaf functional traits are conserved within tree species regardless of endophyte load treatment. (a) Principal Component Analysis (PCA) of leaf functional traits from all tree species separated by *E-* and *E+* treatment. (b) PCA of leaf functional traits of plants solely used in ant herbivory assays. (c) PCA leaf functional traits of plants used solely in pathogen damage assays. Colors represent individual species. Circle and triangles represent low (*E-*) and high (*E+*) endophyte treatments, respectively. Colored ellipses correspond to tree species and represent 95% confidence intervals."
grid_pca <- ggarrange(auto, 
                      ggarrange(auto_ant, auto_pat, nrow = 1, ncol=2, label.x = -0.015, vjust = 1, labels = c("(b)", "(c)")), nrow = 2, common.legend = TRUE, legend="bottom", label.x = -0.01, vjust = 1, labels = "(a)")

grid_pca
# Adding caption
# ant_caption <- expression("*All individual leaves per individual per tree species included ("~ italic("n") ~ "= 210).")
# ant_pca_with_caption <- annotate_figure(antpca_arranged, bottom = text_grob(ant_caption), fig.lab.pos = "bottom.right", fig.lab.size = 6)
# 
# ant_pca_with_caption

#ggsave(filename = "./plots/Aim3_Fig2_02JAN2024.png", plot = grid_pca, dpi=600, units=c("mm"), width = 275, height = 300, bg = "white")
#Previously called Aim3_GridPCA_SEPT182023.png

```

## Figure 3

```{r, Ant LM PCA data}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false

# PCA loadings (rotations) data frame
ant.pci<-data.frame(ant.pca$x) #Species = ndata$Species not included.

# joined data frame for PC llinear regressions

ant_pcalm <- masterant2[c(1,2,5,12, 17)]

ant_pcalm <- cbind(ant_pcalm, ant.pci) #Both data sets have 467 observations
```

```{r, Ant LM PC1-2}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
# Formatting formula for p value
format.p <- function(p, precision = 0.001) {
  digits <- -log(precision, base = 10)
  p <- formatC(p, format = 'f', digits = digits)
  if (p < 0.001) {
    p = paste0('< ', precision)}
  if (p >= 0.001) {
    p = paste0('= ', p)    }
  sub("0", "0", p)
}

lmpc1 <- lm(Ant_percent_leafloss ~ PC1, data = ant_pcalm)

# PC1
# Formatted p-value
ant_p1 <- cor.test(ant_pcalm$Ant_percent_leafloss, ant_pcalm$PC1)$p.value

ant_p1 = format.p(ant_p1) # This is just to make the p-value nicer. 

## Plot PC1
       
ant_pc1 <- ggplot(ant_pcalm, aes(PC1, Ant_percent_leafloss)) +
  geom_jitter(aes(color = Species, shape = E_load), size = 3, alpha = 0.6) +
  geom_smooth(method = lm, se = T , level = 0.95, na.rm = F, color = "black", size = 0.75) +
  stat_regline_equation(label.y.npc = "top", 
                        label.x.npc = "left",
                        size = 7,
                        aes(label = paste(..eq.label..))) +
  scale_color_manual(labels=c("A. membranacea", 
                              "C. cainito", 
                              "C. alliodora", 
                              "Dypterix .sp", 
                              "H. concinna", 
                              "L. panamensis", 
                              "T. cacao"),
                     values = met.brewer(name = "Cross", n = 8, type="discrete")) +
  scale_shape_manual(name = "Treatment",
                     labels=c("E-", "E+"),
                     values = c(16, 17)) +
  theme_classic(base_size = 16) +
  labs(y = "Herbivory (%)", caption = "") +
  theme(legend.title = element_text(face = "bold"),
        legend.text = element_text(color="black", size = 14, face="italic"))
  #guides(color = "none")  +      #To turn off color legend
  #guides(fill = "none") + #To turn off fill legend
  #guides(shape = "none")

#ant_pc1

#ggsave(filename="./plots/Aim3_AntPC1_JUL102023.png", plot = ant_pc1, dpi=600, units=c("mm"), width = 180, height = 180, bg = "white")


# PC2
# Formatted p-values

ant_p2 <- cor.test(ant_pcalm$Ant_percent_leafloss, ant_pcalm$PC2)$p.value

ant_p2 =format.p(ant_p2) # This is just to make the p-value nicer. 

## Plot PC2
lmpc2 <- lm(Ant_percent_leafloss ~ PC2, data = ant_pcalm)

ant_pc2 <- ggplot(ant_pcalm, aes(PC2, Ant_percent_leafloss)) +
  geom_jitter(aes(color = Species, shape = E_load), size = 3, alpha = 0.6) +
  geom_smooth(method = lm, se = T , level = 0.95, na.rm = F, color = "black", size = 0.75) +
  stat_regline_equation(label.y.npc = "top", 
                        label.x.npc = "left",
                        size = 7,
                        aes(label = paste(..eq.label..))) +
  scale_color_manual(labels=c("A. membranacea", 
                            "C. cainito", 
                            "C. alliodora", 
                            "Dypterix .sp", 
                            "H. concinna", 
                            "L. panamensis", 
                            "T. cacao"),
                     values = met.brewer(name = "Cross", n = 8, type="discrete")) +
  theme_classic(base_size = 16) +
  labs(y = "Herbivory (%)", caption = "") +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none")
  
  
#ant_pc2

#ggsave(filename="./plots/Aim3_AntPC2_JUL102023.png", plot = ant_pc2, dpi=600, units=c("mm"), width = 180, height = 180, bg = "white")
```

```{r, Pathogen LM PCA data}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
# PCA loadings (rotations) data frame
pat.pci<-data.frame(pat.pca$x) #Species = ndata$Species not included.

# joined data frame for PC llinear regressions

pat_pcalm <- masterpat2[c(1,2,5,6,13)]

pat_pcalm <- cbind(pat_pcalm, pat.pci) #Both data sets have 467 observations
```

```{r, Pathogen LM PC1-2}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
# Formatting formula for p value
format.p <- function(p, precision = 0.001) {
  digits <- -log(precision, base = 10)
  p <- formatC(p, format = 'f', digits = digits)
  if (p < 0.001) {
    p = paste0('< ', precision)}
  if (p >= 0.001) {
    p = paste0('= ', p)    }
  sub("0", "0", p)
}

plmpc1 <- lm(Pathogen_percent_damage ~ PC2, data = pat_pcalm)

# PC1
# Formatted p-value
pathogen_p1 <- cor.test(pat_pcalm$Pathogen_percent_damage, pat_pcalm$PC1)$p.value

pathogen_p1 = format.p(pathogen_p1) # This is just to make the p-value nicer. 

## Plot PC1
       
pat_pc1 <- ggplot(pat_pcalm, aes(PC1, Pathogen_percent_damage)) +
  geom_jitter(aes(color = Species, shape = E_load), size = 3, alpha = 0.6) +
  geom_smooth(method = lm, se = T , level = 0.95, na.rm = F, color = "black", size = 0.75) +
  stat_regline_equation(label.y.npc = "top", 
                        label.x.npc = "left",
                        size = 7,
                        aes(label = paste(..eq.label..))) +
  scale_color_manual(labels=c("A. membranacea", 
                              "C. cainito",
                              "C. alliodora", 
                              "Dypterix .sp", 
                              "H. concinna", 
                              "L. panamensis", 
                              "T. cacao"),
                     values = met.brewer(name = "Cross", n = 8, type="discrete")) +
  theme_classic(base_size = 16) +
  labs(y = "Pathogen damage (%)", caption = "") +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none")

#pat_pc1

#ggsave(filename="./plots/Aim3_PatPC1_AUG282023.png", plot = pat_pc1, dpi=600, units=c("mm"), width = 180, height = 180, bg = "white")


# PC2
# Formatted p-values
pathogen_p2 <- cor.test(pat_pcalm$Pathogen_percent_damage, pat_pcalm$PC2)$p.value

pathogen_p2 =format.p(pathogen_p2) # This is just to make the p-value nicer. 

## Plot PC2
plmpc2 <- lm(Pathogen_percent_damage ~ PC2, data = pat_pcalm)

pat_pc2 <- ggplot(pat_pcalm, aes(PC2, Pathogen_percent_damage)) +
  geom_jitter(aes(color = Species, shape = E_load), size = 3, alpha = 0.6) +
  geom_smooth(method = lm, se = T , level = 0.95, na.rm = F, color = "black", size = 0.75) +
  stat_regline_equation(label.y.npc = "top", 
                        label.x.npc = "left",
                        size = 7,
                        aes(label = paste(..eq.label..))) +
  scale_color_manual(labels=c("A. membranacea", 
                              "C. cainito", 
                              "C. alliodora",
                              "Dypterix .sp",
                              "H. concinna", 
                              "L. panamensis", 
                              "T. cacao"),
                     values = met.brewer(name = "Cross", n = 8, type="discrete")) +
  theme_classic(base_size = 16) +
  labs(y = "Pathogen damage (%)", caption = "") +
  guides(color = "none")  +      #To turn off color legend
  guides(fill = "none") + #To turn off fill legend
  guides(shape = "none")
  
  
#pat_pc2

#ggsave(filename="./plots/Aim3_PatPC2_AUG282023.png", plot = pat_pc2, dpi=600, units=c("mm"), width = 180, height = 180, bg = "white")
```

```{r, Figure 3}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig.width: 10
#| fig.height: 10
#| fig.cap: "Simple linear regressions of herbivory and pathogen damage on PC1 and PC2 axes from PCAs of leaf traits for ant herbivory and pathogen damage assays. Linear regression of a) percent herbivory damage and PC1 axis (R^2^-adjusted= -0.0024, *p* = 0.447); b) percent herbivory damage and PC2 axis (R^2^-adjusted = 0.079, *p* = <0.001); c) percent pathogen damage and PC1 axis (R^2^-adjusted = 0.064, *p* = <0.001); and d) percent pathogen damage and PC2 axis (R^2^-adjusted  = 0.0016, *p* = 0.207). Colors represent individual species. Circle and triangles represent *E-* and *E+* treatments, respectively."
figure3<- ggarrange(ant_pc1, ant_pc2, pat_pc1, pat_pc2,
                    nrow = 2, 
                    ncol=2, 
                    label.x = -0.015, vjust = 1, 
                    labels = c("(a)", "(b)", "(c)", "(d)"),
                    common.legend = TRUE, 
                    legend="bottom")

figure3

#ggsave(filename = "./plots/Aim3_Fig3_04JAN2024.png", plot = figure3, dpi=600, units=c("mm"), width = 300, height = 225, bg = "white")
#Previously named Aim3_AntPCS_SEPT252023.png
```

## Figure 4

```{r M3REM}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| 
#Optimizers
ctrl <- lmeControl(opt='optim')
ctrl2 <- lmeControl(opt = "nlminb")

#M3REM: Same fixed terms as M2REM
M3REM <- lme(logit_herbivory ~ Thickness  + LMA + E_load, weights = varIdent(form = ~ 1|Species),  random = ~ 1 | Species, method = "REML", control = ctrl, data = masterant2, na.action = na.exclude)

#summary(M3REM)
#AIC(M3REM) #584.711 #1902.209 as of 5/23/23 # 741.7825 as of 30/OCT/2023
```

```{r P3REM}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| 
ctrl <- lmeControl(opt='optim')
ctrl2 <- lmeControl(opt = "nlminb")

P3REM <- lme(logit_pathogenicity ~  LMA + Thickness, weights = varIdent(form = ~ 1|Species),  random = ~ 1 | Species/E_load/Treatment, method = "REML", control = ctrl, data = masterpat2, na.action = na.exclude)
#summary(P3REM)
#AIC(P3REM) #1011.239 as of 30/OCT/2023
```

```{r, Table2, tidy = TRUE}
#| echo: false
#| eval: true
# Regression model table

tab_model(M3REM, P3REM, 
          show.aic = TRUE, 
          show.intercept = TRUE, 
          show.df = FALSE,
          show.ci = 0.95,
          title = "Linear mixed effects models for predicting leaf herbivory and pathogenicity", 
          CSS = list(
            css.depvarhead = 'font-weight:bold;',
            css.centeralign = 'text-align: left;',
            css.firsttablecol = 'font-weight: bold;',
            css.summary = 'color: grey; font-weight: bold;',
            p.style = "numeric_stars"))

```

## Table 1

```{r, replication_statement}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| tbl-cap: "Replication statement of the statistical analysis in this study."


sect_properties <- prop_section(
  page_size = page_size(
    orient = "portrait",
    width = 8.25, height = 11.7
  ),
  type = "continuous",
  page_margins = page_mar()
)

#Thick borders for table
thick <- fp_border(color = "black", style = "solid", width = 2)

rep_statement <- hux(
  "Scale of inference" = c("Leaf functional traits",
                           "Genomic data",
                           "Herbivore and Pathogen trials"),
  
  "Scale at which the factor of interest is applied" = c("Species",
                                                        "Species",
                                                        "Species/individual"),
  "Number of replicates at the appropriate scale" = c("Treatment = 2 (E-, E+), Tropical tree species = 7. Replicates per species = 5. Replicate leaves per plant = 3",
                                                      "Treatment = 2 (E-, E+), Replicates per species = 5",
                                                      "Treatment = 2 (E-, E+), Replicates per species = 5, Replicates per plant = 1"))


rep_statement %>%
  set_all_padding(4) %>% 
      set_outer_padding(0) %>% 
      set_bold(row = 1, col = everywhere) %>% 
      set_bottom_border(row = 1, col = everywhere) %>% 
      set_width(1.1) %>%
  theme_article() %>%
  huxtable::as_flextable(column_to_header=TRUE) %>%
  hline_bottom(part = "body", border = thick) %>%
  hline_top(part = "body", border = thick) %>%
  flextable::align(j = 1:3, align = "center", part = "all") %>%
 # flextable::width(j = 1, width = 1.5, unit = "in") %>%
  flextable::font(
    i = NULL,
    j = NULL,
    fontname = "Tex Gyre Termes",
    part = "all",
    cs.family = fontname,
    hansi.family = fontname,
    eastasia.family = fontname) 

#quick_docx(rep_statement, file = "./tables/replication_statement.docx")


```



## Table 2

```{r, table1}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| tbl-cap: "Summary statistics for the leaf functional traits"
 # Using `gtsummary` and 'flextable' packages
summa_t1 <- tbl_summary(data2 %>%
  group_by(Species, E_load) %>%
  select(c(10:13)) %>%
  rename(Treatment = E_load) %>%
  mutate(Species = case_match(Species, "APEIME" ~ "A. membranacea", 
                            "CHRYCA" ~ "C. cainito", 
                            "CORDAL" ~ "C. alliodora",
                            "DYPTE" ~ "Dypterix .sp",
                            "HEISCO" ~ "H. concinna",
                            "LACPA" ~ "L. panamensis",
                            "THEOCA" ~ "T. cacao")) %>%
  rename('Anthocyanins (ACI)' = Anthocyanins, 
           'Leaf Thickness (LT) (\U00B5m)'=Thickness, 
           'Leaf Punch Strength (LPS) (N mm/1)'= Toughness, 
           'Leaf Mass per Area (LMA) (mg/mm)' = LMA) %>%
  mutate(Treatment= case_match(Treatment, "E-" ~ "E- (n = 570)", 
                        "E+" ~ "E+ (n = 544)")) %>% # The sum of E- and E+ was added after iterations of tbl_summary().
    na.omit(),
  by = Species,
  missing = "no",
  statistic = list(
    all_continuous() ~ "{mean} \u00B1 {sd}", 
    all_categorical() ~ "{n}")) %>%
  modify_header(label = "",
                stat_1 = 'A. membranacea, n = 83',
                stat_2 = 'C. alliodora, n = 100',
                stat_3 = 'C. cainito, n = 150',
                stat_4 = 'Dypterix .sp, n = 288',
                stat_5 = 'H. concinna, n = 132',
                stat_6 = 'L. panamensis, n = 185',
                stat_7 = 'T. cacao, n = 176',
                text_interpret = "md")
#summa_t1

  #modify_footnote(N = "N = count number", abbreviation = TRUE)
  #modify_spanning_header(all_stat_cols(stat_0= T) ~ "**Species**") 
  #modify_caption("**Table 1: Summary statistics for the leaf functional traits**")

#Turning it into a flextable object for further manipulation.
summa_t1 <- summa_t1 %>%
  as_flex_table() %>%
  # set_caption(
  #   as_paragraph(
  #     as_b(
  #       as_chunk("Table 1: Summary statistics for the leaf functional traits",
  #                props = fp_text_default(font.family = "Tex Gyre Termes", font.size = 12)
  #              )
  #     )
  #   ),
  # align_with_table = F) %>%
  flextable::align(j = 1, align = "right", part = "all") %>%
  flextable::align(j = 2:8, align = "center", part = "all") %>%
  flextable::italic(j = c(2:8), italic = TRUE, part = "header") %>%
  flextable::bold(i = 1, bold = TRUE, part = "header") %>%
  flextable::italic(i = 1, italic = TRUE, part = "body") %>%
  #padding(j = 1, padding.right= 40) %>%
  flextable::width(j = 1, width = 1.25, unit = "in") %>%
  flextable::width(j = 2:8, width = 0.75, unit = "in") %>%
  flextable::font(
    i = NULL,
    j = NULL,
    fontname = "Tex Gyre Termes",
    part = "all",
    cs.family = fontname,
    hansi.family = fontname,
    eastasia.family = fontname)

# Adding some thicker borders to the table
thick <- fp_border(color = "black", style = "solid", width = 2)

summa_t1 <- summa_t1 %>%
  hline_bottom(part = "body", border = thick) %>%
  hline_top(part = "body", border = thick)


sect_properties <- prop_section(
  page_size = page_size(
    orient = "portrait",
    width = 8.25, height = 11.7
  ),
  type = "continuous",
  page_margins = page_mar()
)

summa_t1

```

# Supplementary Materials

## Table S1
<<<<<<< HEAD
```{r, supptable_S1}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| tbl-cap: "Comparison of anthocyanin content (ACI) (\u03BCm) means between species."

#Table of results: Anthocyanins T-tests
#Using gt() package
#https://gt.rstudio.com/

#Comparison t-tests
aci_comparisons <- compare_means(Anthocyanins ~ Species, data = master, method = "t.test")

#Table of results
supptable_S1<-  gt(aci_comparisons %>%
                            
                      mutate(group1 = case_match(group1, "APEIME" ~ "A. membranacea", 
                            "CHRYCA" ~ "C. cainito", 
                            "CORDAL" ~ "C. alliodora",
                            "DYPTE" ~ "Dypterix .sp",
                            "HEISCO" ~ "H. concinna",
                            "LACPA" ~ "L. panamensis",
                            "THEOCA" ~ "T. cacao")) %>%
                        mutate(group2 = case_match(group2, "APEIME" ~ "A. membranacea", 
                            "CHRYCA" ~ "C. cainito", 
                            "CORDAL" ~ "C. alliodora",
                            "DYPTE" ~ "Dypterix .sp",
                            "HEISCO" ~ "H. concinna",
                            "LACPA" ~ "L. panamensis",
                            "THEOCA" ~ "T. cacao")) %>%
                        select(!c(1,8)), 
                      rowname_col = ".y.", 
                      groupname_col = "group1") %>% 
  tab_header(
    title = md("**Student's t-Tests of means anthocyanins (ACI)**"),
    subtitle = md("Pairwise comparisons of ACI between species.")) %>%
  tab_stubhead(label = "") %>%
  cols_label(
    group2 = md("Comparison Species"),
  ) %>%
  tab_style(
    style = list(
      cell_text(style = "italic")
      ),
    locations = cells_body(
      columns = group2)) %>%
  tab_style(
    style = cell_text(
      weight = "bold",
      style ="italic"),
    locations = cells_row_groups()) %>%
  tab_style(
    style = list(
      cell_text(weight = "bold")
      ),
    locations = cells_body(
      columns = p:p.signif,
      rows = p< 0.05
      )
    ) %>%
  fmt_scientific(
    columns = p:p.signif,
    decimals = 3,
  ) %>%
  tab_spanner(
    label = md("*p* - values"),
    columns = c(
      p, p.adj, p.format, p.signif
    )
  ) %>%
  tab_footnote(
    footnote = md("Significance levels are represented by *ns* (not significant) and asterisks [*p* = 0.05 (\\*), *p* = 0.01 (\\**), *p* = 0.001 (\\***), and *p* < 0.0001 (\\****)]."),
    locations = cells_column_labels(columns = p.signif)
  ) %>%
  tab_footnote(
    footnote = md("*n* = 156 individuals"),
    locations = cells_column_labels(columns = group2)
  ) %>%
  opt_align_table_header(align = "left") %>%
    opt_table_font(
    font = list(
      google_font(name = "Tex Gyre Termes"),
       "serif"
    )
  )
  
supptable_S1
#gtsave(supptable_S1, file = "Aim3_supptable_S1_05JAN2024.docx", path = "./tables")
```

## Table S2
```{r, supptable_S2}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| tbl-cap: "Comparison of leaf thickness (LT) (\u03BCm) means between species."

#Table of results: Thickness T-tests
#Using gt() package
#https://gt.rstudio.com/

#Comparison t-tests
thickness_comparisons <- compare_means(Thickness ~ Species, data = master, method = "t.test")

#Table of results
supptable_S2<-  gt(thickness_comparisons %>%
                            
                      mutate(group1 = case_match(group1, "APEIME" ~ "A. membranacea", 
                            "CHRYCA" ~ "C. cainito", 
                            "CORDAL" ~ "C. alliodora",
                            "DYPTE" ~ "Dypterix .sp",
                            "HEISCO" ~ "H. concinna",
                            "LACPA" ~ "L. panamensis",
                            "THEOCA" ~ "T. cacao")) %>%
                        mutate(group2 = case_match(group2, "APEIME" ~ "A. membranacea", 
                            "CHRYCA" ~ "C. cainito", 
                            "CORDAL" ~ "C. alliodora",
                            "DYPTE" ~ "Dypterix .sp",
                            "HEISCO" ~ "H. concinna",
                            "LACPA" ~ "L. panamensis",
                            "THEOCA" ~ "T. cacao")) %>%
                        select(!c(1,8)), 
                      rowname_col = ".y.", 
                      groupname_col = "group1") %>% 
  tab_header(
    title = md("**Student's t-Tests of means leaf thickness (LT) (\u03BCm)**"),
    subtitle = md("Pairwise comparisons of LT between species.")) %>%
  tab_stubhead(label = "") %>%
  cols_label(
    group2 = md("Comparison Species"),
  ) %>%
  tab_style(
    style = list(
      cell_text(style = "italic")
      ),
    locations = cells_body(
      columns = group2)) %>%
  tab_style(
    style = cell_text(
      weight = "bold",
      style ="italic"),
    locations = cells_row_groups()) %>%
  tab_style(
    style = list(
      cell_text(weight = "bold")
      ),
    locations = cells_body(
      columns = p:p.signif,
      rows = p< 0.05
      )
    ) %>%
  fmt_scientific(
    columns = p:p.signif,
    decimals = 3,
  ) %>%
  tab_spanner(
    label = md("*p* - values"),
    columns = c(
      p, p.adj, p.format, p.signif
    )
  ) %>%
  tab_footnote(
    footnote = md("Significance levels are represented by *ns* (not significant) and asterisks [*p* = 0.05 (\\*), *p* = 0.01 (\\**), *p* = 0.001 (\\***), and *p* < 0.0001 (\\****)]."),
    locations = cells_column_labels(columns = p.signif)
  ) %>%
  tab_footnote(
    footnote = md("*n* = 156 individuals"),
    locations = cells_column_labels(columns = group2)
  ) %>%
  opt_align_table_header(align = "left") %>%
    opt_table_font(
    font = list(
      google_font(name = "Tex Gyre Termes"),
       "serif"
    )
  )
  
supptable_S2
#gtsave(supptable_S2, file = "Aim3_supptable_S2_05JAN2024.docx", path = "./tables")
```

## Table S3
```{r, supptable_S3}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| tbl-cap: "Comparison of leaf punch strength (LPS) (N mm<sup>-1</sup>) means between species."

#Table of results: Anthocyanins T-tests
#Using gt() package
#https://gt.rstudio.com/

#Comparison t-tests
lps_comparisons <- compare_means(Toughness ~ Species, data = master, method = "t.test")

#Table of results
supptable_S3<-  gt(lps_comparisons %>%
                            
                      mutate(group1 = case_match(group1, "APEIME" ~ "A. membranacea", 
                            "CHRYCA" ~ "C. cainito", 
                            "CORDAL" ~ "C. alliodora",
                            "DYPTE" ~ "Dypterix .sp",
                            "HEISCO" ~ "H. concinna",
                            "LACPA" ~ "L. panamensis",
                            "THEOCA" ~ "T. cacao")) %>%
                        mutate(group2 = case_match(group2, "APEIME" ~ "A. membranacea", 
                            "CHRYCA" ~ "C. cainito", 
                            "CORDAL" ~ "C. alliodora",
                            "DYPTE" ~ "Dypterix .sp",
                            "HEISCO" ~ "H. concinna",
                            "LACPA" ~ "L. panamensis",
                            "THEOCA" ~ "T. cacao")) %>%
                        select(!c(1,8)), 
                      rowname_col = ".y.", 
                      groupname_col = "group1") %>% 
  tab_header(
    title = md("**Student's t-Tests of means leaf punch strength (LPS) (N mm<sup>-1</sup>)**"),
    subtitle = md("Pairwise comparisons of LPS between species.")) %>%
  tab_stubhead(label = "") %>%
  cols_label(
    group2 = md("Comparison Species"),
  ) %>%
  tab_style(
    style = list(
      cell_text(style = "italic")
      ),
    locations = cells_body(
      columns = group2)) %>%
  tab_style(
    style = cell_text(
      weight = "bold",
      style ="italic"),
    locations = cells_row_groups()) %>%
  tab_style(
    style = list(
      cell_text(weight = "bold")
      ),
    locations = cells_body(
      columns = p:p.signif,
      rows = p< 0.05
      )
    ) %>%
  fmt_scientific(
    columns = p:p.signif,
    decimals = 3,
  ) %>%
  tab_spanner(
    label = md("*p* - values"),
    columns = c(
      p, p.adj, p.format, p.signif
    )
  ) %>%
  tab_footnote(
    footnote = md("Significance levels are represented by *ns* (not significant) and asterisks [*p* = 0.05 (\\*), *p* = 0.01 (\\**), *p* = 0.001 (\\***), and *p* < 0.0001 (\\****)]."),
    locations = cells_column_labels(columns = p.signif)
  ) %>%
  tab_footnote(
    footnote = md("*n* = 156 individuals"),
    locations = cells_column_labels(columns = group2)
  ) %>%
  opt_align_table_header(align = "left") %>%
    opt_table_font(
    font = list(
      google_font(name = "Tex Gyre Termes"),
       "serif"
    )
  )
  
supptable_S3
#gtsave(supptable_S3, file = "Aim3_supptable_S3_05JAN2024.docx", path = "./tables")
```

## Table S4
```{r, supptable_S4}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| tbl-cap: "Comparison of leaf mass per are LMA) (mg mm^-2) means between species."

#Table of results: Anthocyanins T-tests
#Using gt() package
#https://gt.rstudio.com/

#Comparison t-tests
lma_comparisons <- compare_means(Toughness ~ Species, data = master, method = "t.test")

#Table of results
supptable_S4 <-  gt(lma_comparisons %>%
                            
                      mutate(group1 = case_match(group1, "APEIME" ~ "A. membranacea", 
                            "CHRYCA" ~ "C. cainito", 
                            "CORDAL" ~ "C. alliodora",
                            "DYPTE" ~ "Dypterix .sp",
                            "HEISCO" ~ "H. concinna",
                            "LACPA" ~ "L. panamensis",
                            "THEOCA" ~ "T. cacao")) %>%
                        mutate(group2 = case_match(group2, "APEIME" ~ "A. membranacea", 
                            "CHRYCA" ~ "C. cainito", 
                            "CORDAL" ~ "C. alliodora",
                            "DYPTE" ~ "Dypterix .sp",
                            "HEISCO" ~ "H. concinna",
                            "LACPA" ~ "L. panamensis",
                            "THEOCA" ~ "T. cacao")) %>%
                        select(!c(1,8)), 
                      rowname_col = ".y.", 
                      groupname_col = "group1") %>% 
  tab_header(
    title = md("**Student's t-Tests of means leaf mass per area (LMA) (mg mm<sup>-2</sup>)**"),
    subtitle = md("Pairwise comparisons of LMA between species.")) %>%
  tab_stubhead(label = "") %>%
  cols_label(
    group2 = md("Comparison Species"),
  ) %>%
  tab_style(
    style = list(
      cell_text(style = "italic")
      ),
    locations = cells_body(
      columns = group2)) %>%
  tab_style(
    style = cell_text(
      weight = "bold",
      style ="italic"),
    locations = cells_row_groups()) %>%
  tab_style(
    style = list(
      cell_text(weight = "bold")
      ),
    locations = cells_body(
      columns = p:p.signif,
      rows = p< 0.05
      )
    ) %>%
  fmt_scientific(
    columns = p:p.signif,
    decimals = 3,
  ) %>%
  tab_spanner(
    label = md("*p* - values"),
    columns = c(
      p, p.adj, p.format, p.signif
    )
  ) %>%
  tab_footnote(
    footnote = md("Significance levels are represented by *ns* (not significant) and asterisks: *p* = 0.05 (\\*), *p* = 0.01 (\\**), p = 0.001 (\\***), and *p* < 0.0001 (\\****)]."),
    locations = cells_column_labels(columns = p.signif)
  ) %>%
  tab_footnote(
    footnote = md("*n* = 156 individuals"),
    locations = cells_column_labels(columns = group2)
  ) %>%
  opt_align_table_header(align = "left") %>%
    opt_table_font(
    font = list(
      google_font(name = "Tex Gyre Termes"),
       "serif"
    )
  )
  
supptable_S4
#gtsave(supptable_S4, file = "Aim3_supptable_S4_05JAN2024.docx", path = "./tables")

```


## Figure S1a- S1b
```{r}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
##| fig.align: 'center'
#| fig.height: 5
#| fig.width: 5
#| fig.cap: "Distributions of values and means of anthocyanin content (ACI) in treatment groups (*E-* and *E+*) and tree species. a) Comparison of ACI means between treatment groups across indivuals of all species. Statistical significance was calculated using a two-sided Student's t-Test. b) Comparison of ACI means between treatment types of each species. Statistical significance was calulated with an analysis of variance (ANOVA). Significance levels are represented by *ns* (not significant) and asterisks [*p* = 0.05 (\\*), *p* = 0.01 (\\**), and *p* = 0.001 (\\***)]."


# Comparisons
mycomparisons <- list(c("APEIME", "CHRYCA"), c("APEIME", "CORDAL"), c("APEIME", "DYPTE"), c("APEIME", "HEISCO"),c("APEIME", "LACPA"), c("APEIME","THEOCA"),
                      c("CHRYCA","CORDAL"), c("CHRYCA","DYPTE"),c("CHRYCA","HEISCO"), c("CHRYCA","LACPA"), c("CHRYCA", "THEOCA"),
                      c("CORDAL","DYPTE"), c("CORDAL","HEISCO"), c("CORDAL","LACPA"), c("CORDAL","THEOCA"), 
                      c("DYPTE","HEISCO"), c("DYPTE","LACPA"), c("DYPTE","THEOCA"), 
                      c("HEISCO","LACPA"), c("HEISCO","THEOCA"), c("LACPA","THEOCA"))

newname <- c("A. membranacea", "C. cainito", "C. alliodora", "Dypterix .sp", "H. concinna", "L. panamensis", "T. cacao")

names(newname) <- c("APEIME", "CHRYCA", "CORDAL", "DYPTE", "HEISCO", "LACPA", "THEOCA")

# Anthocyanins by endophyte load an species
ACIa <- ggplot(data = master, aes(x = E_load, y = Anthocyanins, fill = E_load)) +
  geom_violin() +
  geom_point(position = position_jitterdodge(dodge.width = 0.9, jitter.width = 0.2),
             alpha = 0.3, color = "grey30", size = 2) +
  geom_crossbar(stat="summary", 
               fun = mean, 
               fun.max = mean, 
               fun.min = mean,
               alpha = 0.3, 
               size = 0.3, 
               width = 0.7,
               position = position_dodge(width = 0.9)) +
  scale_fill_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels=c(newname)) +
  theme_classic(base_size = 16) +
  theme(
        #panel.grid.major = element_line(colour = "grey"),
        #panel.grid.minor = element_line(colour = "grey"),
        #strip.background = element_rect(fill = "white"),
        #strip.text.x = element_text(colour = "black", face = "bold"),
        legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        axis.text.x=element_blank(),
        legend.position="right", 
        legend.text = element_text(size = 14)) +
  labs(x="", y=expression(paste("ACI (% ", italic("A") [lambda]," at 931 nm / % ", italic("A") [lambda]," at 530 nm)"))) +
  theme(legend.position="right", 
        legend.text = element_text(size = 14)) +
  #labs(caption = "*Outliers and singletons removed.") +
  
  #annotate("text", x = 2.5, y = .65, label = "") +
  stat_compare_means(label = "p.signif", 
                     method = "t.test",
                     comparisons =list(c("E-", "E+")),
                     bracket.size = 0.8)

#ACIa


ACIb <- ggplot(data = master, aes(x = Species, y = Anthocyanins, fill = E_load)) +
  geom_violin() +
  geom_point(position = position_jitterdodge(dodge.width = 0.9, jitter.width = 0.2),
             alpha = 0.3, color = "grey30", size = 2) +
  geom_crossbar(stat="summary", 
               fun = mean, 
               fun.max = mean, 
               fun.min = mean,
               alpha = 0.3, 
               size = 0.3, 
               width = 0.7,
               position = position_dodge(width = 0.9)) +
  scale_fill_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels=c(newname)) +
  theme_classic(base_size = 16) +
  theme(
        #panel.grid.major = element_line(colour = "grey"),
        #panel.grid.minor = element_line(colour = "grey"),
        #strip.background = element_rect(fill = "white"),
        #strip.text.x = element_text(colour = "black", face = "bold"),
        legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        axis.text.x=element_text(face = "italic", hjust = 1, angle = 30),
        legend.position="right", 
        legend.text = element_text(size = 14)) +
  labs(x="", y=expression(paste("ACI (% ", italic("A") [lambda]," at 931 nm / % ", italic("A") [lambda]," at 530 nm)"))) +
  #theme(legend.position="right", 
        #legend.text = element_text(size = 14)) +
  #labs(caption = "*Outliers and singletons removed.") +
  #annotate("text", x = 2.5, y = .65, label = "") +
  stat_compare_means(label = "p.signif", method = "anova")

#ACIb

# Figure S1a S1b
suppfig_1 <- ggarrange(ACIa, ACIb, nrow = 1, ncol=2, common.legend = TRUE, legend="bottom", labels = c("(a)", "(b)"))
suppfig_1
#ggsave(filename="./plots/Aim3_FigS1_04JAN2024.png", plot = suppfig_1, dpi=600, units=c("mm"), width = 250, height = 200, bg ="white")
```

## Figure S2a-S2b
```{r suppfig_2}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
##| fig.align: 'center'
#| fig.height: 5
#| fig.width: 5
#| fig.cap: "Distributions of values and means of leaf thickness (LT) (\mug) in treatment groups (*E-* and *E+*) and tree species. a) Comparison of LT means between treatment groups across indivuals of all species. Statistical significance was calculated using a two-sided Student's t-Test. b) Comparison of LT means between treatment types of each species. Statistical significance was calulated with an analysis of variance (ANOVA). Significance levels are represented by *ns* (not significant) and asterisks [*p* = 0.05 (\\*), *p* = 0.01 (\\**), and *p* = 0.001 (\\***)]."

# Leaf thickness by endophyte load and species

LTa <- ggplot(data = master, aes(x = E_load, y = Thickness, fill = E_load)) +
  geom_violin() +
  geom_point(position = position_jitterdodge(dodge.width = 0.9, jitter.width = 0.2),
             alpha = 0.3, color = "grey30", size = 2) +
  geom_crossbar(stat="summary", 
               fun = mean, 
               fun.max = mean, 
               fun.min = mean,
               alpha = 0.3, 
               size = 0.3, 
               width = 0.7,
               position = position_dodge(width = 0.9)) +
  scale_fill_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels=c(newname)) +
  scale_y_continuous(limits = c(100, 300)) +
  theme_classic(base_size = 16) +
  theme(
        #panel.grid.major = element_line(colour = "grey"),
        #panel.grid.minor = element_line(colour = "grey"),
        #strip.background = element_rect(fill = "white"),
        #strip.text.x = element_text(colour = "black", face = "bold"),
        legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        axis.text.x=element_blank(),
        legend.position="right", 
        legend.text = element_text(size = 14)) +
  labs(x="", y= expression(paste("Leaf thickness (",mu,"m)"))) +
  theme(legend.position="right", 
        legend.text = element_text(size = 14)) +
  #labs(caption = "*Outliers and singletons removed.") +
  
  #annotate("text", x = 2.5, y = .65, label = "") +
  stat_compare_means(label = "p.signif", 
                     method = "t.test",
                     comparisons =list(c("E-", "E+")),
                     bracket.size = 0.8)

#LTa


LTb <- ggplot(data = master, aes(x = Species, y = Thickness, fill = E_load)) +
  geom_violin() +
  geom_point(position = position_jitterdodge(dodge.width = 0.9, jitter.width = 0.2),
             alpha = 0.3, color = "grey30", size = 2) +
  geom_crossbar(stat="summary", 
               fun = mean, 
               fun.max = mean, 
               fun.min = mean,
               alpha = 0.3, 
               size = 0.3, 
               width = 0.7,
               position = position_dodge(width = 0.9)) +
  scale_fill_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels=c(newname)) +
  scale_y_continuous(limits = c(100, 300)) +
  theme_classic(base_size = 16) +
  theme(
        #panel.grid.major = element_line(colour = "grey"),
        #panel.grid.minor = element_line(colour = "grey"),
        #strip.background = element_rect(fill = "white"),
        #strip.text.x = element_text(colour = "black", face = "bold"),
        legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        axis.text.x=element_text(face = "italic", hjust = 1, angle = 30),
        legend.position="right", 
        legend.text = element_text(size = 14)) +
  labs(x="", y= expression(paste("Leaf thickness (",mu,"m)"))) +
  #theme(legend.position="right", 
        #legend.text = element_text(size = 14)) +
  #labs(caption = "*Outliers and singletons removed.") +
  #annotate("text", x = 2.5, y = .65, label = "") +
  stat_compare_means(label = "p.signif", method = "anova")
#LTb

# Figure S2a S2b
suppfig_2 <- ggarrange(LTa, LTb, nrow = 1, ncol=2, common.legend = TRUE, legend="bottom", labels = c("(a)", "(b)"))
suppfig_2

#ggsave(filename="./plots/Aim3_FigS2_03JAN2024.png", plot = suppfig_2, dpi=600, units=c("mm"), width = 250, height = 200, bg ="white")
#Previously saved under name: Aim3_LT_Species_07062022.png
#

```

## Figure S3a-S3b

```{r, suppfig_3 }
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
##| fig.align: 'center'
#| fig.height: 5
#| fig.width: 5
#| fig.cap: "Distributions of values and means of leaf punch stength (LPS) (N mm^-1) in treatment groups (*E-* and *E+*) and tree species. a) Comparison of LPS means between treatment groups across indivuals of all species. Statistical significance was calculated using a two-sided Student's t-Test. b) Comparison of LPS means between treatment types of each species. Statistical significance was calulated with an analysis of variance (ANOVA). Significance levels are represented by *ns* (not significant) and asterisks [*p* = 0.05 (\\*), *p* = 0.01 (\\**), and *p* = 0.001 (\\***)]."
#| 
# Figure S3
# Leaf toughness (lbf) by  endophyte load and species with data (data) ####
LPSa <- ggplot(data = master, aes( x = E_load, y = Toughness, fill = E_load)) +
geom_violin() +
  geom_point(position = position_jitterdodge(dodge.width = 0.9, jitter.width = 0.2),
             alpha = 0.3, color = "grey30", size = 2) +
  geom_crossbar(stat="summary", 
               fun = mean, 
               fun.max = mean, 
               fun.min = mean,
               alpha = 0.3, 
               size = 0.3, 
               width = 0.7,
               position = position_dodge(width = 0.9)) +
  scale_fill_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels=c(newname)) +
  theme_classic(base_size = 16) +
  theme(
        #panel.grid.major = element_line(colour = "grey"),
        #panel.grid.minor = element_line(colour = "grey"),
        #strip.background = element_rect(fill = "white"),
        #strip.text.x = element_text(colour = "black", face = "bold"),
        legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        axis.text.x=element_blank(),
        legend.position="right", 
        legend.text = element_text(size = 14)) +
  labs(x="", y= expression(paste("Leaf punch strength (N mm","^-1)"))) +
  #labs(caption = "*Outliers and singletons removed.") +
  stat_compare_means(label = "p.signif", 
                     method = "t.test",
                     comparisons =list(c("E-", "E+")),
                     bracket.size = 0.8) 
#LPSa

# 
#
LPSb <- ggplot(data = master, aes( x = Species, y = Toughness, fill = E_load)) +
geom_violin() +
  geom_point(position = position_jitterdodge(dodge.width = 0.9, jitter.width = 0.2),
             alpha = 0.3, color = "grey30", size = 2) +
  geom_crossbar(stat="summary", 
               fun = mean, 
               fun.max = mean, 
               fun.min = mean,
               alpha = 0.3, 
               size = 0.3, 
               width = 0.7,
               position = position_dodge(width = 0.9)) +
  scale_fill_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels=c(newname)) +
  theme_classic(base_size = 16) +
  theme(
        #panel.grid.major = element_line(colour = "grey"),
        #panel.grid.minor = element_line(colour = "grey"),
        #strip.background = element_rect(fill = "white"),
        #strip.text.x = element_text(colour = "black", face = "bold"),
        legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        axis.text.x=element_text(face = "italic", hjust = 1, angle = 30),
        legend.position="right", 
        legend.text = element_text(size = 14)) +
  labs(x="", y= expression(paste("Leaf punch strength (N ", mm^-1,")"))) +
  #labs(caption = "*Outliers and singletons removed.") +
  stat_compare_means(label = "p.signif", method = "anova") +
  ylim(0.10, 1) 
LPSb

# Figure S3a S3b
suppfig_3 <- ggarrange(LPSa, LPSb, nrow = 1, ncol=2, common.legend = TRUE, legend="bottom", labels = c("(a)", "(b)"))
suppfig_3
#ggsave(filename="./plots/Aim3_FigS3_03JAN2024.png", plot = suppfig_3, dpi=600, units=c("mm"), width = 250, height = 200, bg ="white")
#Previously named Aim3_LPS_Species_07062022.png

```

## Figure S4a-S4b
```{r, suppfig_4}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
##| fig.align: 'center'
#| fig.height: 5
#| fig.width: 5
#| fig.cap: "Distributions of values and means of leaf mass per area (LMA) (mg mm^2) in treatment groups (*E-* and *E+*) and tree species. a) Comparison of LMA means between treatment groups across indivuals of all species. Statistical significance was calculated using a two-sided Student's t-Test. b) Comparison of LMA means between treatment types of each species. Statistical significance was calulated with an analysis of variance (ANOVA). Significance levels are represented by *ns* (not significant) and asterisks [*p* = 0.05 (\\*), *p* = 0.01 (\\**), and *p* = 0.001 (\\***)]."

# Figure S4
# Leaf mass per area (LMA) by  endophyte load and species
LMAa <- ggplot(data = master, aes(x = E_load, y = LMA, fill = E_load)) +
  geom_violin() +
  geom_point(position = position_jitterdodge(dodge.width = 0.9, jitter.width = 0.2),
             alpha = 0.3, color = "grey30", size = 2) +
  geom_crossbar(stat="summary", 
               fun = mean, 
               fun.max = mean, 
               fun.min = mean,
               alpha = 0.3, 
               size = 0.3, 
               width = 0.7,
               position = position_dodge(width = 0.9)) +
  scale_fill_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels=c(newname)) +
  theme_classic(base_size = 16) +
  theme(
        #panel.grid.major = element_line(colour = "grey"),
        #panel.grid.minor = element_line(colour = "grey"),
        #strip.background = element_rect(fill = "white"),
        #strip.text.x = element_text(colour = "black", face = "bold"),
        legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        axis.text.x=element_blank(),
        legend.position="right", 
        legend.text = element_text(size = 14)) +
  labs(x="", y= expression(paste("LMA (mg ",mm^-2, ")"))) +
  stat_compare_means(label = "p.signif", 
                     method = "t.test",
                     comparisons =list(c("E-", "E+")),
                     bracket.size = 0.8)
#LMAa

LMAb <- ggplot(data = master, aes( x = Species, y = LMA, fill = E_load)) +
geom_violin() +
  geom_point(position = position_jitterdodge(dodge.width = 0.9, jitter.width = 0.2),
             alpha = 0.3, color = "grey30", size = 2) +
  geom_crossbar(stat="summary", 
               fun = mean, 
               fun.max = mean, 
               fun.min = mean,
               alpha = 0.3, 
               size = 0.3, 
               width = 0.7,
               position = position_dodge(width = 0.9)) +
  scale_fill_manual(name = "Treatment ", values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_color_manual(values= met.brewer("Cross", n = 2, type = "discrete")) +
  scale_x_discrete(labels=c(newname)) +
  theme_classic(base_size = 16) +
  theme(
        #panel.grid.major = element_line(colour = "grey"),
        #panel.grid.minor = element_line(colour = "grey"),
        #strip.background = element_rect(fill = "white"),
        #strip.text.x = element_text(colour = "black", face = "bold"),
        legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        axis.text.x=element_text(face = "italic", hjust = 1, angle = 30),
        legend.position="right", 
        legend.text = element_text(size = 14)) +
  labs(x="", y= expression(paste("LMA (mg ",mm^-2, ")"))) +
  #labs(caption = "*Outliers and singletons removed.") +
  stat_compare_means(label = "p.signif", method = "anova")

#LMAb

# Figure S4a-S4b
suppfig_4 <- ggarrange(LMAa, LMAb, nrow = 1, ncol=2, common.legend = TRUE, legend="bottom", labels = c("(a)", "(b)"))
suppfig_4

#ggsave(filename="./plots/Aim3_FigS4_04JAN2024.png", plot = suppfig_4, dpi=600, units=c("mm"), width = 250, height = 200, bg ="white")
```